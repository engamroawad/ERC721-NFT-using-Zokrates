{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOnwer",
          "type": "address"
        }
      ],
      "name": "OwnerTransfered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "solutionAdded",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "ispaused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "internalType": "struct Pairing.G2Point",
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "c",
              "type": "tuple"
            }
          ],
          "internalType": "struct SquareVerifier.Proof",
          "name": "proof",
          "type": "tuple"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "internalType": "bool",
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "internalType": "struct Pairing.G2Point",
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "c",
              "type": "tuple"
            }
          ],
          "internalType": "struct SquareVerifier.Proof",
          "name": "proof",
          "type": "tuple"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mintNewNFT",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOnwer\",\"type\":\"address\"}],\"name\":\"OwnerTransfered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"solutionAdded\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct Pairing.G2Point\",\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"c\",\"type\":\"tuple\"}],\"internalType\":\"struct SquareVerifier.Proof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mintNewNFT\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"ispaused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct Pairing.G2Point\",\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"c\",\"type\":\"tuple\"}],\"internalType\":\"struct SquareVerifier.Proof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x9684b301784bd913bf2f57fa3005dc4e116130da50fbd1d9611514b93e918cf4\",\"urls\":[\"bzz-raw://06b650caddd66a668a65fc06b0a03a17221017992bd37ce4a09e32a776e87ac5\",\"dweb:/ipfs/Qmev7towbQbAPofzA787e42okL8HEzoaGZ7j5MDLUsKUVK\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xb52451b2dd0f619be4ed5aa04973fc5cd5e23333c5ae94d65b13e3040c9df417\",\"urls\":[\"bzz-raw://d808eab1bc9079b11e465a0dc8acbe375395ec380bb5bb106b074a2720994b19\",\"dweb:/ipfs/QmQ75XfcPJPkR7CGyttLKxqiJYUN6hUQG2UKrjRP5BrZ3H\"]},\"project:/contracts/SquareVerifier.sol\":{\"keccak256\":\"0x701b79c6fea9cb72382cdfa76ba1c3d0dd0d2b2feb0906359eb4298285669d59\",\"urls\":[\"bzz-raw://89d0eb7d4ecbf9da29f6bc7f36afbacfef2823703b3b2e74948fff04e77838cb\",\"dweb:/ipfs/QmXbptoLGdjMp4kJ1UmMJzKLgGpstnRvjLiE9c7VZKehSS\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600881526020017f63617073746f6e650000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f43415000000000000000000000000000000000000000000000000000000000008152506040518060600160405280603f81526020016200465d603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f32f9b4ad842654dbc1aefcf3959047b3100382a41e757e901bf5f504d503a7096000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516200011c919062000352565b60405180910390a160008060146101000a81548160ff021916908315150217905550620001566301ffc9a760e01b620001f260201b60201c565b6200016e6380ac58cd60e01b620001f260201b60201c565b6200018663780e9d6360e01b620001f260201b60201c565b82600f90805190602001906200019e92919062000292565b508160109080519060200190620001b792919062000292565b508060119080519060200190620001d092919062000292565b50620001e9635b5e139f60e01b620001f260201b60201c565b505050620003a3565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156200022657600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002d557805160ff191683800117855562000306565b8280016001018555821562000306579182015b8281111562000305578251825591602001919060010190620002e8565b5b50905062000315919062000319565b5090565b6200033e91905b808211156200033a57600081600090555060010162000320565b5090565b90565b6200034c816200036f565b82525050565b600060208201905062000369600083018462000341565b92915050565b60006200037c8262000383565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6142aa80620003b36000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c806342842e0e116100de57806395d89b4111610097578063c87b56dd11610071578063c87b56dd14610491578063d547cfb7146104c1578063e985e9c5146104df578063f2fde38b1461050f5761018e565b806395d89b411461043b578063a22cb46514610459578063b88d4fde146104755761018e565b806342842e0e1461034157806343cd76fc1461035d5780634f6ccce71461038d5780636352211e146103bd57806370a08231146103ed578063893d20e81461041d5761018e565b806318160ddd1161014b5780632f745c59116101255780632f745c59146102bb57806338bbfa50146102eb5780633adf31e91461030757806340c10f19146103115761018e565b806318160ddd1461026557806323b872dd1461028357806327dc297e1461029f5761018e565b806301ffc9a71461019357806305152544146101c357806306fdde03146101df578063081812fc146101fd578063095ea7b31461022d57806316c38b3c14610249575b600080fd5b6101ad60048036036101a891908101906137a0565b61052b565b6040516101ba9190613de8565b60405180910390f35b6101dd60048036036101d89190810190613883565b610593565b005b6101e761079c565b6040516101f49190613e03565b60405180910390f35b6102176004803603610212919081019061385a565b61083e565b6040516102249190613d66565b60405180910390f35b61024760048036036102429190810190613668565b61087b565b005b610263600480360361025e91908101906136a4565b610a37565b005b61026d610b5d565b60405161027a9190613f70565b60405180910390f35b61029d60048036036102989190810190613562565b610b6a565b005b6102b960048036036102b491908101906136cd565b610b8d565b005b6102d560048036036102d09190810190613668565b610bd0565b6040516102e29190613f70565b60405180910390f35b61030560048036036103009190810190613721565b610c43565b005b61030f610c48565b005b61032b60048036036103269190810190613668565b610d3a565b6040516103389190613de8565b60405180910390f35b61035b60048036036103569190810190613562565b610de8565b005b6103776004803603610372919081019061381c565b610e08565b6040516103849190613de8565b60405180910390f35b6103a760048036036103a2919081019061385a565b610ead565b6040516103b49190613f70565b60405180910390f35b6103d760048036036103d2919081019061385a565b610ee1565b6040516103e49190613d66565b60405180910390f35b610407600480360361040291908101906134fd565b610f1e565b6040516104149190613f70565b60405180910390f35b610425610f6e565b6040516104329190613d66565b60405180910390f35b610443610f97565b6040516104509190613e03565b60405180910390f35b610473600480360361046e919081019061362c565b611039565b005b61048f600480360361048a91908101906135b1565b61116f565b005b6104ab60048036036104a6919081019061385a565b611195565b6040516104b89190613e03565b60405180910390f35b6104c961125c565b6040516104d69190613e03565b60405180910390f35b6104f960048036036104f49190810190613526565b6112fe565b6040516105069190613de8565b60405180910390f35b610529600480360361052491908101906134fd565b611392565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600084846040516020016105a8929190613f45565b6040516020818303038152906040528051906020012090503373ffffffffffffffffffffffffffffffffffffffff16601387815481106105e457fe5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461066c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066390613ee5565b60405180910390fd5b6014600082815260200190815260200160002060009054906101000a900460ff16156106cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c490613f25565b60405180910390fd5b61071e858036036106e191908101906137f2565b856002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050610e08565b61075d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075490613f05565b60405180910390fd5b60016014600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506107938383610d3a565b50505050505050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108345780601f1061080957610100808354040283529160200191610834565b820191906000526020600020905b81548152906001019060200180831161081757829003601f168201915b5050505050905090565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61088481610ee1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e990613e85565b60405180910390fd5b6108fa610f6e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610940575061093f610939610f6e565b836112fe565b5b61097f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097690613e45565b60405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166109f1610f6e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abd90613ea5565b60405180910390fd5b80600060146101000a81548160ff0219169083151502179055508015610b22577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051610b159190613d81565b60405180910390a1610b5a565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051610b519190613d81565b60405180910390a15b50565b6000600880549050905090565b610b743382611509565b610b7d57600080fd5b610b8883838361159e565b505050565b610bcc828260006040519080825280601f01601f191660200182016040528015610bc65781602001600182028038833980820191505090505b50610c43565b5050565b6000610bdb83610f1e565b8210610be657600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610c3057fe5b9060005260206000200154905092915050565b505050565b60006013805490509050601360405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050507f529aebee0fa53cdfb493ac455bd2a7b5924a502f5e34b85b84ebda0e84e62cb28133604051610d2f929190613f8b565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc290613ea5565b60405180910390fd5b610dd583836115c2565b610dde826115e3565b6001905092915050565b610e038383836040518060200160405280600081525061116f565b505050565b600060606002604051908082528060200260200182016040528015610e3c5781602001602082028038833980820191505090505b50905060008090505b6002811015610e8457838160028110610e5a57fe5b6020020151828281518110610e6b57fe5b6020026020010181815250508080600101915050610e45565b506000610e9182866116d1565b1415610ea1576001915050610ea7565b60009150505b92915050565b6000610eb7610b5d565b8210610ec257600080fd5b60088281548110610ecf57fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610f67600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611843565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561102f5780601f106110045761010080835404028352916020019161102f565b820191906000526020600020905b81548152906001019060200180831161101257829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561107257600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111639190613de8565b60405180910390a35050565b61117a848484610b6a565b61118684848484611851565b61118f57600080fd5b50505050565b60606111a082611968565b6111a957600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112505780601f1061122557610100808354040283529160200191611250565b820191906000526020600020905b81548152906001019060200180831161123357829003601f168201915b50505050509050919050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112f45780601f106112c9576101008083540402835291602001916112f4565b820191906000526020600020905b8154815290600101906020018083116112d757829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141890613ea5565b60405180910390fd5b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461148f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148690613e65565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f32f9b4ad842654dbc1aefcf3959047b3100382a41e757e901bf5f504d503a709816040516114fe9190613d66565b60405180910390a150565b60008061151583610ee1565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061158457508373ffffffffffffffffffffffffffffffffffffffff1661156c8461083e565b73ffffffffffffffffffffffffffffffffffffffff16145b80611595575061159481856112fe565b5b91505092915050565b6115a98383836119da565b6115b38382611c00565b6115bd8282611d9e565b505050565b6115cc8282611e65565b6115d68282611d9e565b6115df81612038565b5050565b6115ec81611968565b6115f557600080fd5b606061160082612084565b90506116a660118054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561169b5780601f106116705761010080835404028352916020019161169b565b820191906000526020600020905b81548152906001019060200180831161167e57829003601f168201915b5050505050826121b1565b6012600084815260200190815260200160002090805190602001906116cc929190612fc2565b505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506116ff613042565b6117076121f5565b905080608001515160018651011461171e57600080fd5b611726613089565b6040518060400160405280600081526020016000815250905060008090505b86518110156117bc578387828151811061175b57fe5b60200260200101511061176d57600080fd5b6117ad826117a88560800151600185018151811061178757fe5b60200260200101518a858151811061179b57fe5b6020026020010151612643565b6126d5565b91508080600101915050611745565b506117df8183608001516000815181106117d257fe5b60200260200101516126d5565b9050611825856000015186602001516117f784612786565b85604001516118098a60400151612786565b876060015161181b8960000151612786565b8960200151612820565b611835576001935050505061183d565b600093505050505b92915050565b600081600001549050919050565b60006118728473ffffffffffffffffffffffffffffffffffffffff16612984565b61187f5760019050611960565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016118c09493929190613d9c565b602060405180830381600087803b1580156118da57600080fd5b505af11580156118ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061191291908101906137c9565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6119e381610ee1565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611a50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4790613e25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a8a57600080fd5b6003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b59600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206129cf565b611ba0600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206129e5565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611c586001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612a0890919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611d45576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611cc557fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611d1d57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611d9791906130a3565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b8173ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158015611f015750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b611f40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f3790613ec5565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611fd9600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206129cf565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b606060008214156120cc576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506121ac565b600082905060005b600082146120f6578080600101915050600a82816120ee57fe5b0491506120d4565b6060816040519080825280601f01601f19166020018201604052801561212b5781602001600182028038833980820191505090505b50905060006001830390505b600086146121a457600a868161214957fe5b0660300160f81b8282806001900393508151811061216357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161219c57fe5b049550612137565b819450505050505b919050565b60606121ed8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612a52565b905092915050565b6121fd613042565b60405180604001604052807f21530f795f9d7b11f67d8527f77d76326a72d55dbd1d21c088ff7c8baed4cef481526020017f274dd944268822a53146aacbad45d7c3fdf65779a3f60b25330505a3a0ee3f6a8152508160000181905250604051806040016040528060405180604001604052807f02bfea4e7884ca572b581ced2b6d6cea7dda530b1a03a3fd319528fa439c779681526020017f2ab551261bcd7ead6d66faf4cf4af0595ab0bcf7f99aee957728957e312b4687815250815260200160405180604001604052807f0abb37b15f67009f4c11976a989ee5ae58d5812fa5d856af91d179c69d18eec781526020017f2c166ecaf2c139938c2c9243693f135ae89d8257cfa3482546c5e4107da8d5568152508152508160200181905250604051806040016040528060405180604001604052807f1ef91ba25dd4c3ed41906f19d1f50571d9247ef8727fc630943e2f0547960a1581526020017f2caf068b25548fdb73f3803b5203fb246f297d4c2ab24d95f4f176ad9c0c8b2c815250815260200160405180604001604052807f2fa8aff5017d236e6a8a6cd3efa3ac1a1288c047a03078aa5220932f00a537d481526020017f235f2ace6bb12ae66a1f449b805bb6902cfff06dfe56acda33fb7f022d92a5688152508152508160400181905250604051806040016040528060405180604001604052807f20693624624ee75c3fd118800e498a6ea289fb04f2c78be3c24ff5fac24cf6fa81526020017f158b2adccfad27af256e602295bb6647c12a28b216393e38b0e7b9b485d55807815250815260200160405180604001604052807f230d34c59db61d692475bd61629f789b19dee431d131c2fb4998c27f44d4cd5e81526020017f235805737bba90472ac6051591891a4bff7c0536609f8a1847a0cd979bc7e9a4815250815250816060018190525060036040519080825280602002602001820160405280156124e457816020015b6124d16130cf565b8152602001906001900390816124c95790505b50816080018190525060405180604001604052807f187a80baee0912286e78371eac69aaaf10816e075611f48d34984608f5c6f9f581526020017f14aa361290ef0313efbe32a6d64032923bf34d79dfbdc1fbbe403116b2fdb91b815250816080015160008151811061255357fe5b602002602001018190525060405180604001604052807f11cabf1220886a165a563c2f0c43d45a74900241502d6887b91dbe6e8432a54481526020017f0bc1841cd7c9f82351804f520e4ee50396d5a4d3a26aa7c6a5e137aff09621d481525081608001516001815181106125c457fe5b602002602001018190525060405180604001604052807f0f51f75ed81101c766421b1b78dfff6ef333a2297f832197d5d5535b57f0d4f281526020017f2ece8f863ae207b5f48671ddc789a24ff025bfb5fab12bed4493cd15b0efece0815250816080015160028151811061263557fe5b602002602001018190525090565b61264b613089565b6126536130e9565b83600001518160006003811061266557fe5b60200201818152505083602001518160016003811061268057fe5b602002018181525050828160026003811061269757fe5b602002018181525050600060608360808460076107d05a03fa905080600081146126c0576126c2565bfe5b50806126cd57600080fd5b505092915050565b6126dd613089565b6126e561310b565b8360000151816000600481106126f757fe5b60200201818152505083602001518160016004811061271257fe5b60200201818152505082600001518160026004811061272d57fe5b60200201818152505082602001518160036004811061274857fe5b602002018181525050600060608360c08460066107d05a03fa9050806000811461277157612773565bfe5b508061277e57600080fd5b505092915050565b61278e613089565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479050600083600001511480156127cb575060008360200151145b156127ef57604051806040016040528060008152602001600081525091505061281b565b6040518060400160405280846000015181526020018285602001518161281157fe5b0683038152509150505b919050565b60006060600460405190808252806020026020018201604052801561285f57816020015b61284c6130cf565b8152602001906001900390816128445790505b5090506060600460405190808252806020026020018201604052801561289f57816020015b61288c61312d565b8152602001906001900390816128845790505b5090508a826000815181106128b057fe5b602002602001018190525088826001815181106128c957fe5b602002602001018190525086826002815181106128e257fe5b602002602001018190525084826003815181106128fb57fe5b6020026020010181905250898160008151811061291457fe5b6020026020010181905250878160018151811061292d57fe5b6020026020010181905250858160028151811061294657fe5b6020026020010181905250838160038151811061295f57fe5b60200260200101819052506129748282612d14565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156129c657506000801b8214155b92505050919050565b6001816000016000828254019250508190555050565b6129fd60018260000154612a0890919063ffffffff16565b816000018190555050565b6000612a4a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612f67565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015612aae5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612b3357888181518110612ada57fe5b602001015160f81c60f81b838380600101945081518110612af757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612ac5565b600090505b8751811015612ba657878181518110612b4d57fe5b602001015160f81c60f81b838380600101945081518110612b6a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612b38565b600090505b8651811015612c1957868181518110612bc057fe5b602001015160f81c60f81b838380600101945081518110612bdd57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612bab565b600090505b8551811015612c8c57858181518110612c3357fe5b602001015160f81c60f81b838380600101945081518110612c5057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612c1e565b600090505b8451811015612cff57848181518110612ca657fe5b602001015160f81c60f81b838380600101945081518110612cc357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612c91565b82995050505050505050505095945050505050565b60008151835114612d2457600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015612d635781602001602082028038833980820191505090505b50905060008090505b83811015612f0957868181518110612d8057fe5b602002602001015160000151826000600684020181518110612d9e57fe5b602002602001018181525050868181518110612db657fe5b602002602001015160200151826001600684020181518110612dd457fe5b602002602001018181525050858181518110612dec57fe5b602002602001015160000151600160028110612e0457fe5b6020020151826002600684020181518110612e1b57fe5b602002602001018181525050858181518110612e3357fe5b602002602001015160000151600060028110612e4b57fe5b6020020151826003600684020181518110612e6257fe5b602002602001018181525050858181518110612e7a57fe5b602002602001015160200151600160028110612e9257fe5b6020020151826004600684020181518110612ea957fe5b602002602001018181525050858181518110612ec157fe5b602002602001015160200151600060028110612ed957fe5b6020020151826005600684020181518110612ef057fe5b6020026020010181815250508080600101915050612d6c565b50612f12613153565b6000602082602086026020860160086107d05a03fa90508060008114612f3757612f39565bfe5b5080612f4457600080fd5b600082600060018110612f5357fe5b602002015114159550505050505092915050565b6000838311158290612faf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612fa69190613e03565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061300357805160ff1916838001178555613031565b82800160010185558215613031579182015b82811115613030578251825591602001919060010190613015565b5b50905061303e9190613175565b5090565b6040518060a001604052806130556130cf565b815260200161306261312d565b815260200161306f61312d565b815260200161307c61312d565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b8154818355818111156130ca578183600052602060002091820191016130c99190613175565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b604051806040016040528061314061319a565b815260200161314d61319a565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b61319791905b8082111561319357600081600090555060010161317b565b5090565b90565b6040518060400160405280600290602082028038833980820191505090505090565b6000813590506131cb816141f4565b92915050565b6000819050826020600202820111156131e957600080fd5b92915050565b600082601f83011261320057600080fd5b600261321361320e82613fe1565b613fb4565b9150818385602084028201111561322957600080fd5b60005b83811015613259578161323f88826134e8565b84526020840193506020830192505060018101905061322c565b5050505092915050565b600082601f83011261327457600080fd5b600261328761328282614003565b613fb4565b9150818385602084028201111561329d57600080fd5b60005b838110156132cd57816132b388826134e8565b8452602084019350602083019250506001810190506132a0565b5050505092915050565b6000813590506132e68161420b565b92915050565b6000813590506132fb81614222565b92915050565b60008135905061331081614239565b92915050565b60008151905061332581614239565b92915050565b600082601f83011261333c57600080fd5b813561334f61334a82614025565b613fb4565b9150808252602083016020830185838301111561336b57600080fd5b6133768382846141a1565b50505092915050565b600082601f83011261339057600080fd5b81356133a361339e82614051565b613fb4565b915080825260208301602083018583830111156133bf57600080fd5b6133ca8382846141a1565b50505092915050565b6000604082840312156133e557600080fd5b6133ef6040613fb4565b905060006133ff848285016134e8565b6000830152506020613413848285016134e8565b60208301525092915050565b60006080828403121561343157600080fd5b61343b6040613fb4565b9050600061344b848285016131ef565b600083015250604061345f848285016131ef565b60208301525092915050565b6000610100828403121561347e57600080fd5b81905092915050565b6000610100828403121561349a57600080fd5b6134a46060613fb4565b905060006134b4848285016133d3565b60008301525060406134c88482850161341f565b60208301525060c06134dc848285016133d3565b60408301525092915050565b6000813590506134f781614250565b92915050565b60006020828403121561350f57600080fd5b600061351d848285016131bc565b91505092915050565b6000806040838503121561353957600080fd5b6000613547858286016131bc565b9250506020613558858286016131bc565b9150509250929050565b60008060006060848603121561357757600080fd5b6000613585868287016131bc565b9350506020613596868287016131bc565b92505060406135a7868287016134e8565b9150509250925092565b600080600080608085870312156135c757600080fd5b60006135d5878288016131bc565b94505060206135e6878288016131bc565b93505060406135f7878288016134e8565b925050606085013567ffffffffffffffff81111561361457600080fd5b6136208782880161332b565b91505092959194509250565b6000806040838503121561363f57600080fd5b600061364d858286016131bc565b925050602061365e858286016132d7565b9150509250929050565b6000806040838503121561367b57600080fd5b6000613689858286016131bc565b925050602061369a858286016134e8565b9150509250929050565b6000602082840312156136b657600080fd5b60006136c4848285016132d7565b91505092915050565b600080604083850312156136e057600080fd5b60006136ee858286016132ec565b925050602083013567ffffffffffffffff81111561370b57600080fd5b6137178582860161337f565b9150509250929050565b60008060006060848603121561373657600080fd5b6000613744868287016132ec565b935050602084013567ffffffffffffffff81111561376157600080fd5b61376d8682870161337f565b925050604084013567ffffffffffffffff81111561378a57600080fd5b6137968682870161332b565b9150509250925092565b6000602082840312156137b257600080fd5b60006137c084828501613301565b91505092915050565b6000602082840312156137db57600080fd5b60006137e984828501613316565b91505092915050565b6000610100828403121561380557600080fd5b600061381384828501613487565b91505092915050565b600080610140838503121561383057600080fd5b600061383e85828601613487565b92505061010061385085828601613263565b9150509250929050565b60006020828403121561386c57600080fd5b600061387a848285016134e8565b91505092915050565b60008060008060006101a0868803121561389c57600080fd5b60006138aa888289016134e8565b95505060206138bb8882890161346b565b9450506101206138cd888289016131d1565b9350506101606138df888289016131bc565b9250506101806138f1888289016134e8565b9150509295509295909350565b6139078161416b565b82525050565b613916816140ed565b82525050565b613928604083836141a1565b5050565b613938604083836141a1565b5050565b613945816140ff565b82525050565b60006139568261407d565b6139608185614093565b93506139708185602086016141b0565b613979816141e3565b840191505092915050565b600061398f82614088565b61399981856140a4565b93506139a98185602086016141b0565b6139b2816141e3565b840191505092915050565b60006139ca6022836140a4565b91507f66726f6d206973206e6f7420746865206f776e6572206f662074686520746f6b60008301527f656e0000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613a30602b836140a4565b91507f6e6f7420617070726f76656420666f7220616c6c206f722063616c6c6572206960008301527f73206e6f74206f6e7765720000000000000000000000000000000000000000006020830152604082019050919050565b6000613a966014836140a4565b91507f6d757374206265207265616c20616464726573730000000000000000000000006000830152602082019050919050565b6000613ad6601c836140a4565b91507f616464726573732063616e277420626520746f6b656e204f776e6572000000006000830152602082019050919050565b6000613b16601c836140a4565b91507f43616c6c6572206973206e6f7420636f6e7472616374206f776e6572000000006000830152602082019050919050565b6000613b56602f836140a4565b91507f63616e2774206d696e7420746f6b656e206265636175736520746f6b656e206160008301527f6c726561647920657869736974732100000000000000000000000000000000006020830152604082019050919050565b6000613bbc6010836140a4565b91507f696e636f72726563742063616c6c6572000000000000000000000000000000006000830152602082019050919050565b6000613bfc6017836140a4565b91507f736f6c7574696f6e206973206e6f7420636f72726563740000000000000000006000830152602082019050919050565b6000613c3c6017836140a4565b91507f736f6c7574696f6e2069732075736564206265666f72650000000000000000006000830152602082019050919050565b60408201613c8060008301836140d6565b613c8d6000850182613d48565b50613c9b60208301836140d6565b613ca86020850182613d48565b50505050565b60808201613cbf60008301836140b5565b613ccc600085018261392c565b50613cda60408301836140b5565b613ce7604085018261392c565b50505050565b6101008201613cff60008301836140c0565b613d0c6000850182613c6f565b50613d1a60408301836140cb565b613d276040850182613cae565b50613d3560c08301836140c0565b613d4260c0850182613c6f565b50505050565b613d5181614161565b82525050565b613d6081614161565b82525050565b6000602082019050613d7b600083018461390d565b92915050565b6000602082019050613d9660008301846138fe565b92915050565b6000608082019050613db160008301876138fe565b613dbe602083018661390d565b613dcb6040830185613d57565b8181036060830152613ddd818461394b565b905095945050505050565b6000602082019050613dfd600083018461393c565b92915050565b60006020820190508181036000830152613e1d8184613984565b905092915050565b60006020820190508181036000830152613e3e816139bd565b9050919050565b60006020820190508181036000830152613e5e81613a23565b9050919050565b60006020820190508181036000830152613e7e81613a89565b9050919050565b60006020820190508181036000830152613e9e81613ac9565b9050919050565b60006020820190508181036000830152613ebe81613b09565b9050919050565b60006020820190508181036000830152613ede81613b49565b9050919050565b60006020820190508181036000830152613efe81613baf565b9050919050565b60006020820190508181036000830152613f1e81613bef565b9050919050565b60006020820190508181036000830152613f3e81613c2f565b9050919050565b600061014082019050613f5b6000830185613ced565b613f6961010083018461391c565b9392505050565b6000602082019050613f856000830184613d57565b92915050565b6000604082019050613fa06000830185613d57565b613fad60208301846138fe565b9392505050565b6000604051905081810181811067ffffffffffffffff82111715613fd757600080fd5b8060405250919050565b600067ffffffffffffffff821115613ff857600080fd5b602082029050919050565b600067ffffffffffffffff82111561401a57600080fd5b602082029050919050565b600067ffffffffffffffff82111561403c57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561406857600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082905092915050565b600082905092915050565b600082905092915050565b60006140e560208401846134e8565b905092915050565b60006140f882614141565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006141768261417d565b9050919050565b60006141888261418f565b9050919050565b600061419a82614141565b9050919050565b82818337600083830152505050565b60005b838110156141ce5780820151818401526020810190506141b3565b838111156141dd576000848401525b50505050565b6000601f19601f8301169050919050565b6141fd816140ed565b811461420857600080fd5b50565b614214816140ff565b811461421f57600080fd5b50565b61422b8161410b565b811461423657600080fd5b50565b61424281614115565b811461424d57600080fd5b50565b61425981614161565b811461426457600080fd5b5056fea365627a7a72315820b92cba081aa2a863f74aaabaef1c50e22507600b8e328a0ac317bbe67b39c8826c6578706572696d656e74616cf564736f6c6343000510004068747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c806342842e0e116100de57806395d89b4111610097578063c87b56dd11610071578063c87b56dd14610491578063d547cfb7146104c1578063e985e9c5146104df578063f2fde38b1461050f5761018e565b806395d89b411461043b578063a22cb46514610459578063b88d4fde146104755761018e565b806342842e0e1461034157806343cd76fc1461035d5780634f6ccce71461038d5780636352211e146103bd57806370a08231146103ed578063893d20e81461041d5761018e565b806318160ddd1161014b5780632f745c59116101255780632f745c59146102bb57806338bbfa50146102eb5780633adf31e91461030757806340c10f19146103115761018e565b806318160ddd1461026557806323b872dd1461028357806327dc297e1461029f5761018e565b806301ffc9a71461019357806305152544146101c357806306fdde03146101df578063081812fc146101fd578063095ea7b31461022d57806316c38b3c14610249575b600080fd5b6101ad60048036036101a891908101906137a0565b61052b565b6040516101ba9190613de8565b60405180910390f35b6101dd60048036036101d89190810190613883565b610593565b005b6101e761079c565b6040516101f49190613e03565b60405180910390f35b6102176004803603610212919081019061385a565b61083e565b6040516102249190613d66565b60405180910390f35b61024760048036036102429190810190613668565b61087b565b005b610263600480360361025e91908101906136a4565b610a37565b005b61026d610b5d565b60405161027a9190613f70565b60405180910390f35b61029d60048036036102989190810190613562565b610b6a565b005b6102b960048036036102b491908101906136cd565b610b8d565b005b6102d560048036036102d09190810190613668565b610bd0565b6040516102e29190613f70565b60405180910390f35b61030560048036036103009190810190613721565b610c43565b005b61030f610c48565b005b61032b60048036036103269190810190613668565b610d3a565b6040516103389190613de8565b60405180910390f35b61035b60048036036103569190810190613562565b610de8565b005b6103776004803603610372919081019061381c565b610e08565b6040516103849190613de8565b60405180910390f35b6103a760048036036103a2919081019061385a565b610ead565b6040516103b49190613f70565b60405180910390f35b6103d760048036036103d2919081019061385a565b610ee1565b6040516103e49190613d66565b60405180910390f35b610407600480360361040291908101906134fd565b610f1e565b6040516104149190613f70565b60405180910390f35b610425610f6e565b6040516104329190613d66565b60405180910390f35b610443610f97565b6040516104509190613e03565b60405180910390f35b610473600480360361046e919081019061362c565b611039565b005b61048f600480360361048a91908101906135b1565b61116f565b005b6104ab60048036036104a6919081019061385a565b611195565b6040516104b89190613e03565b60405180910390f35b6104c961125c565b6040516104d69190613e03565b60405180910390f35b6104f960048036036104f49190810190613526565b6112fe565b6040516105069190613de8565b60405180910390f35b610529600480360361052491908101906134fd565b611392565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600084846040516020016105a8929190613f45565b6040516020818303038152906040528051906020012090503373ffffffffffffffffffffffffffffffffffffffff16601387815481106105e457fe5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461066c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066390613ee5565b60405180910390fd5b6014600082815260200190815260200160002060009054906101000a900460ff16156106cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c490613f25565b60405180910390fd5b61071e858036036106e191908101906137f2565b856002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050610e08565b61075d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075490613f05565b60405180910390fd5b60016014600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506107938383610d3a565b50505050505050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108345780601f1061080957610100808354040283529160200191610834565b820191906000526020600020905b81548152906001019060200180831161081757829003601f168201915b5050505050905090565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61088481610ee1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e990613e85565b60405180910390fd5b6108fa610f6e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610940575061093f610939610f6e565b836112fe565b5b61097f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097690613e45565b60405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166109f1610f6e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abd90613ea5565b60405180910390fd5b80600060146101000a81548160ff0219169083151502179055508015610b22577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051610b159190613d81565b60405180910390a1610b5a565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051610b519190613d81565b60405180910390a15b50565b6000600880549050905090565b610b743382611509565b610b7d57600080fd5b610b8883838361159e565b505050565b610bcc828260006040519080825280601f01601f191660200182016040528015610bc65781602001600182028038833980820191505090505b50610c43565b5050565b6000610bdb83610f1e565b8210610be657600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610c3057fe5b9060005260206000200154905092915050565b505050565b60006013805490509050601360405180604001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050507f529aebee0fa53cdfb493ac455bd2a7b5924a502f5e34b85b84ebda0e84e62cb28133604051610d2f929190613f8b565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc290613ea5565b60405180910390fd5b610dd583836115c2565b610dde826115e3565b6001905092915050565b610e038383836040518060200160405280600081525061116f565b505050565b600060606002604051908082528060200260200182016040528015610e3c5781602001602082028038833980820191505090505b50905060008090505b6002811015610e8457838160028110610e5a57fe5b6020020151828281518110610e6b57fe5b6020026020010181815250508080600101915050610e45565b506000610e9182866116d1565b1415610ea1576001915050610ea7565b60009150505b92915050565b6000610eb7610b5d565b8210610ec257600080fd5b60088281548110610ecf57fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610f67600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611843565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561102f5780601f106110045761010080835404028352916020019161102f565b820191906000526020600020905b81548152906001019060200180831161101257829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561107257600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111639190613de8565b60405180910390a35050565b61117a848484610b6a565b61118684848484611851565b61118f57600080fd5b50505050565b60606111a082611968565b6111a957600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112505780601f1061122557610100808354040283529160200191611250565b820191906000526020600020905b81548152906001019060200180831161123357829003601f168201915b50505050509050919050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112f45780601f106112c9576101008083540402835291602001916112f4565b820191906000526020600020905b8154815290600101906020018083116112d757829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141890613ea5565b60405180910390fd5b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461148f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148690613e65565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f32f9b4ad842654dbc1aefcf3959047b3100382a41e757e901bf5f504d503a709816040516114fe9190613d66565b60405180910390a150565b60008061151583610ee1565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061158457508373ffffffffffffffffffffffffffffffffffffffff1661156c8461083e565b73ffffffffffffffffffffffffffffffffffffffff16145b80611595575061159481856112fe565b5b91505092915050565b6115a98383836119da565b6115b38382611c00565b6115bd8282611d9e565b505050565b6115cc8282611e65565b6115d68282611d9e565b6115df81612038565b5050565b6115ec81611968565b6115f557600080fd5b606061160082612084565b90506116a660118054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561169b5780601f106116705761010080835404028352916020019161169b565b820191906000526020600020905b81548152906001019060200180831161167e57829003601f168201915b5050505050826121b1565b6012600084815260200190815260200160002090805190602001906116cc929190612fc2565b505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506116ff613042565b6117076121f5565b905080608001515160018651011461171e57600080fd5b611726613089565b6040518060400160405280600081526020016000815250905060008090505b86518110156117bc578387828151811061175b57fe5b60200260200101511061176d57600080fd5b6117ad826117a88560800151600185018151811061178757fe5b60200260200101518a858151811061179b57fe5b6020026020010151612643565b6126d5565b91508080600101915050611745565b506117df8183608001516000815181106117d257fe5b60200260200101516126d5565b9050611825856000015186602001516117f784612786565b85604001516118098a60400151612786565b876060015161181b8960000151612786565b8960200151612820565b611835576001935050505061183d565b600093505050505b92915050565b600081600001549050919050565b60006118728473ffffffffffffffffffffffffffffffffffffffff16612984565b61187f5760019050611960565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b81526004016118c09493929190613d9c565b602060405180830381600087803b1580156118da57600080fd5b505af11580156118ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061191291908101906137c9565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6119e381610ee1565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611a50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4790613e25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a8a57600080fd5b6003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b59600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206129cf565b611ba0600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206129e5565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611c586001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612a0890919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611d45576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611cc557fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611d1d57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611d9791906130a3565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b8173ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158015611f015750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b611f40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f3790613ec5565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611fd9600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206129cf565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b606060008214156120cc576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506121ac565b600082905060005b600082146120f6578080600101915050600a82816120ee57fe5b0491506120d4565b6060816040519080825280601f01601f19166020018201604052801561212b5781602001600182028038833980820191505090505b50905060006001830390505b600086146121a457600a868161214957fe5b0660300160f81b8282806001900393508151811061216357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161219c57fe5b049550612137565b819450505050505b919050565b60606121ed8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612a52565b905092915050565b6121fd613042565b60405180604001604052807f21530f795f9d7b11f67d8527f77d76326a72d55dbd1d21c088ff7c8baed4cef481526020017f274dd944268822a53146aacbad45d7c3fdf65779a3f60b25330505a3a0ee3f6a8152508160000181905250604051806040016040528060405180604001604052807f02bfea4e7884ca572b581ced2b6d6cea7dda530b1a03a3fd319528fa439c779681526020017f2ab551261bcd7ead6d66faf4cf4af0595ab0bcf7f99aee957728957e312b4687815250815260200160405180604001604052807f0abb37b15f67009f4c11976a989ee5ae58d5812fa5d856af91d179c69d18eec781526020017f2c166ecaf2c139938c2c9243693f135ae89d8257cfa3482546c5e4107da8d5568152508152508160200181905250604051806040016040528060405180604001604052807f1ef91ba25dd4c3ed41906f19d1f50571d9247ef8727fc630943e2f0547960a1581526020017f2caf068b25548fdb73f3803b5203fb246f297d4c2ab24d95f4f176ad9c0c8b2c815250815260200160405180604001604052807f2fa8aff5017d236e6a8a6cd3efa3ac1a1288c047a03078aa5220932f00a537d481526020017f235f2ace6bb12ae66a1f449b805bb6902cfff06dfe56acda33fb7f022d92a5688152508152508160400181905250604051806040016040528060405180604001604052807f20693624624ee75c3fd118800e498a6ea289fb04f2c78be3c24ff5fac24cf6fa81526020017f158b2adccfad27af256e602295bb6647c12a28b216393e38b0e7b9b485d55807815250815260200160405180604001604052807f230d34c59db61d692475bd61629f789b19dee431d131c2fb4998c27f44d4cd5e81526020017f235805737bba90472ac6051591891a4bff7c0536609f8a1847a0cd979bc7e9a4815250815250816060018190525060036040519080825280602002602001820160405280156124e457816020015b6124d16130cf565b8152602001906001900390816124c95790505b50816080018190525060405180604001604052807f187a80baee0912286e78371eac69aaaf10816e075611f48d34984608f5c6f9f581526020017f14aa361290ef0313efbe32a6d64032923bf34d79dfbdc1fbbe403116b2fdb91b815250816080015160008151811061255357fe5b602002602001018190525060405180604001604052807f11cabf1220886a165a563c2f0c43d45a74900241502d6887b91dbe6e8432a54481526020017f0bc1841cd7c9f82351804f520e4ee50396d5a4d3a26aa7c6a5e137aff09621d481525081608001516001815181106125c457fe5b602002602001018190525060405180604001604052807f0f51f75ed81101c766421b1b78dfff6ef333a2297f832197d5d5535b57f0d4f281526020017f2ece8f863ae207b5f48671ddc789a24ff025bfb5fab12bed4493cd15b0efece0815250816080015160028151811061263557fe5b602002602001018190525090565b61264b613089565b6126536130e9565b83600001518160006003811061266557fe5b60200201818152505083602001518160016003811061268057fe5b602002018181525050828160026003811061269757fe5b602002018181525050600060608360808460076107d05a03fa905080600081146126c0576126c2565bfe5b50806126cd57600080fd5b505092915050565b6126dd613089565b6126e561310b565b8360000151816000600481106126f757fe5b60200201818152505083602001518160016004811061271257fe5b60200201818152505082600001518160026004811061272d57fe5b60200201818152505082602001518160036004811061274857fe5b602002018181525050600060608360c08460066107d05a03fa9050806000811461277157612773565bfe5b508061277e57600080fd5b505092915050565b61278e613089565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479050600083600001511480156127cb575060008360200151145b156127ef57604051806040016040528060008152602001600081525091505061281b565b6040518060400160405280846000015181526020018285602001518161281157fe5b0683038152509150505b919050565b60006060600460405190808252806020026020018201604052801561285f57816020015b61284c6130cf565b8152602001906001900390816128445790505b5090506060600460405190808252806020026020018201604052801561289f57816020015b61288c61312d565b8152602001906001900390816128845790505b5090508a826000815181106128b057fe5b602002602001018190525088826001815181106128c957fe5b602002602001018190525086826002815181106128e257fe5b602002602001018190525084826003815181106128fb57fe5b6020026020010181905250898160008151811061291457fe5b6020026020010181905250878160018151811061292d57fe5b6020026020010181905250858160028151811061294657fe5b6020026020010181905250838160038151811061295f57fe5b60200260200101819052506129748282612d14565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156129c657506000801b8214155b92505050919050565b6001816000016000828254019250508190555050565b6129fd60018260000154612a0890919063ffffffff16565b816000018190555050565b6000612a4a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612f67565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015612aae5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612b3357888181518110612ada57fe5b602001015160f81c60f81b838380600101945081518110612af757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612ac5565b600090505b8751811015612ba657878181518110612b4d57fe5b602001015160f81c60f81b838380600101945081518110612b6a57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612b38565b600090505b8651811015612c1957868181518110612bc057fe5b602001015160f81c60f81b838380600101945081518110612bdd57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612bab565b600090505b8551811015612c8c57858181518110612c3357fe5b602001015160f81c60f81b838380600101945081518110612c5057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612c1e565b600090505b8451811015612cff57848181518110612ca657fe5b602001015160f81c60f81b838380600101945081518110612cc357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612c91565b82995050505050505050505095945050505050565b60008151835114612d2457600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015612d635781602001602082028038833980820191505090505b50905060008090505b83811015612f0957868181518110612d8057fe5b602002602001015160000151826000600684020181518110612d9e57fe5b602002602001018181525050868181518110612db657fe5b602002602001015160200151826001600684020181518110612dd457fe5b602002602001018181525050858181518110612dec57fe5b602002602001015160000151600160028110612e0457fe5b6020020151826002600684020181518110612e1b57fe5b602002602001018181525050858181518110612e3357fe5b602002602001015160000151600060028110612e4b57fe5b6020020151826003600684020181518110612e6257fe5b602002602001018181525050858181518110612e7a57fe5b602002602001015160200151600160028110612e9257fe5b6020020151826004600684020181518110612ea957fe5b602002602001018181525050858181518110612ec157fe5b602002602001015160200151600060028110612ed957fe5b6020020151826005600684020181518110612ef057fe5b6020026020010181815250508080600101915050612d6c565b50612f12613153565b6000602082602086026020860160086107d05a03fa90508060008114612f3757612f39565bfe5b5080612f4457600080fd5b600082600060018110612f5357fe5b602002015114159550505050505092915050565b6000838311158290612faf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612fa69190613e03565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061300357805160ff1916838001178555613031565b82800160010185558215613031579182015b82811115613030578251825591602001919060010190613015565b5b50905061303e9190613175565b5090565b6040518060a001604052806130556130cf565b815260200161306261312d565b815260200161306f61312d565b815260200161307c61312d565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b8154818355818111156130ca578183600052602060002091820191016130c99190613175565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b604051806040016040528061314061319a565b815260200161314d61319a565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b61319791905b8082111561319357600081600090555060010161317b565b5090565b90565b6040518060400160405280600290602082028038833980820191505090505090565b6000813590506131cb816141f4565b92915050565b6000819050826020600202820111156131e957600080fd5b92915050565b600082601f83011261320057600080fd5b600261321361320e82613fe1565b613fb4565b9150818385602084028201111561322957600080fd5b60005b83811015613259578161323f88826134e8565b84526020840193506020830192505060018101905061322c565b5050505092915050565b600082601f83011261327457600080fd5b600261328761328282614003565b613fb4565b9150818385602084028201111561329d57600080fd5b60005b838110156132cd57816132b388826134e8565b8452602084019350602083019250506001810190506132a0565b5050505092915050565b6000813590506132e68161420b565b92915050565b6000813590506132fb81614222565b92915050565b60008135905061331081614239565b92915050565b60008151905061332581614239565b92915050565b600082601f83011261333c57600080fd5b813561334f61334a82614025565b613fb4565b9150808252602083016020830185838301111561336b57600080fd5b6133768382846141a1565b50505092915050565b600082601f83011261339057600080fd5b81356133a361339e82614051565b613fb4565b915080825260208301602083018583830111156133bf57600080fd5b6133ca8382846141a1565b50505092915050565b6000604082840312156133e557600080fd5b6133ef6040613fb4565b905060006133ff848285016134e8565b6000830152506020613413848285016134e8565b60208301525092915050565b60006080828403121561343157600080fd5b61343b6040613fb4565b9050600061344b848285016131ef565b600083015250604061345f848285016131ef565b60208301525092915050565b6000610100828403121561347e57600080fd5b81905092915050565b6000610100828403121561349a57600080fd5b6134a46060613fb4565b905060006134b4848285016133d3565b60008301525060406134c88482850161341f565b60208301525060c06134dc848285016133d3565b60408301525092915050565b6000813590506134f781614250565b92915050565b60006020828403121561350f57600080fd5b600061351d848285016131bc565b91505092915050565b6000806040838503121561353957600080fd5b6000613547858286016131bc565b9250506020613558858286016131bc565b9150509250929050565b60008060006060848603121561357757600080fd5b6000613585868287016131bc565b9350506020613596868287016131bc565b92505060406135a7868287016134e8565b9150509250925092565b600080600080608085870312156135c757600080fd5b60006135d5878288016131bc565b94505060206135e6878288016131bc565b93505060406135f7878288016134e8565b925050606085013567ffffffffffffffff81111561361457600080fd5b6136208782880161332b565b91505092959194509250565b6000806040838503121561363f57600080fd5b600061364d858286016131bc565b925050602061365e858286016132d7565b9150509250929050565b6000806040838503121561367b57600080fd5b6000613689858286016131bc565b925050602061369a858286016134e8565b9150509250929050565b6000602082840312156136b657600080fd5b60006136c4848285016132d7565b91505092915050565b600080604083850312156136e057600080fd5b60006136ee858286016132ec565b925050602083013567ffffffffffffffff81111561370b57600080fd5b6137178582860161337f565b9150509250929050565b60008060006060848603121561373657600080fd5b6000613744868287016132ec565b935050602084013567ffffffffffffffff81111561376157600080fd5b61376d8682870161337f565b925050604084013567ffffffffffffffff81111561378a57600080fd5b6137968682870161332b565b9150509250925092565b6000602082840312156137b257600080fd5b60006137c084828501613301565b91505092915050565b6000602082840312156137db57600080fd5b60006137e984828501613316565b91505092915050565b6000610100828403121561380557600080fd5b600061381384828501613487565b91505092915050565b600080610140838503121561383057600080fd5b600061383e85828601613487565b92505061010061385085828601613263565b9150509250929050565b60006020828403121561386c57600080fd5b600061387a848285016134e8565b91505092915050565b60008060008060006101a0868803121561389c57600080fd5b60006138aa888289016134e8565b95505060206138bb8882890161346b565b9450506101206138cd888289016131d1565b9350506101606138df888289016131bc565b9250506101806138f1888289016134e8565b9150509295509295909350565b6139078161416b565b82525050565b613916816140ed565b82525050565b613928604083836141a1565b5050565b613938604083836141a1565b5050565b613945816140ff565b82525050565b60006139568261407d565b6139608185614093565b93506139708185602086016141b0565b613979816141e3565b840191505092915050565b600061398f82614088565b61399981856140a4565b93506139a98185602086016141b0565b6139b2816141e3565b840191505092915050565b60006139ca6022836140a4565b91507f66726f6d206973206e6f7420746865206f776e6572206f662074686520746f6b60008301527f656e0000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613a30602b836140a4565b91507f6e6f7420617070726f76656420666f7220616c6c206f722063616c6c6572206960008301527f73206e6f74206f6e7765720000000000000000000000000000000000000000006020830152604082019050919050565b6000613a966014836140a4565b91507f6d757374206265207265616c20616464726573730000000000000000000000006000830152602082019050919050565b6000613ad6601c836140a4565b91507f616464726573732063616e277420626520746f6b656e204f776e6572000000006000830152602082019050919050565b6000613b16601c836140a4565b91507f43616c6c6572206973206e6f7420636f6e7472616374206f776e6572000000006000830152602082019050919050565b6000613b56602f836140a4565b91507f63616e2774206d696e7420746f6b656e206265636175736520746f6b656e206160008301527f6c726561647920657869736974732100000000000000000000000000000000006020830152604082019050919050565b6000613bbc6010836140a4565b91507f696e636f72726563742063616c6c6572000000000000000000000000000000006000830152602082019050919050565b6000613bfc6017836140a4565b91507f736f6c7574696f6e206973206e6f7420636f72726563740000000000000000006000830152602082019050919050565b6000613c3c6017836140a4565b91507f736f6c7574696f6e2069732075736564206265666f72650000000000000000006000830152602082019050919050565b60408201613c8060008301836140d6565b613c8d6000850182613d48565b50613c9b60208301836140d6565b613ca86020850182613d48565b50505050565b60808201613cbf60008301836140b5565b613ccc600085018261392c565b50613cda60408301836140b5565b613ce7604085018261392c565b50505050565b6101008201613cff60008301836140c0565b613d0c6000850182613c6f565b50613d1a60408301836140cb565b613d276040850182613cae565b50613d3560c08301836140c0565b613d4260c0850182613c6f565b50505050565b613d5181614161565b82525050565b613d6081614161565b82525050565b6000602082019050613d7b600083018461390d565b92915050565b6000602082019050613d9660008301846138fe565b92915050565b6000608082019050613db160008301876138fe565b613dbe602083018661390d565b613dcb6040830185613d57565b8181036060830152613ddd818461394b565b905095945050505050565b6000602082019050613dfd600083018461393c565b92915050565b60006020820190508181036000830152613e1d8184613984565b905092915050565b60006020820190508181036000830152613e3e816139bd565b9050919050565b60006020820190508181036000830152613e5e81613a23565b9050919050565b60006020820190508181036000830152613e7e81613a89565b9050919050565b60006020820190508181036000830152613e9e81613ac9565b9050919050565b60006020820190508181036000830152613ebe81613b09565b9050919050565b60006020820190508181036000830152613ede81613b49565b9050919050565b60006020820190508181036000830152613efe81613baf565b9050919050565b60006020820190508181036000830152613f1e81613bef565b9050919050565b60006020820190508181036000830152613f3e81613c2f565b9050919050565b600061014082019050613f5b6000830185613ced565b613f6961010083018461391c565b9392505050565b6000602082019050613f856000830184613d57565b92915050565b6000604082019050613fa06000830185613d57565b613fad60208301846138fe565b9392505050565b6000604051905081810181811067ffffffffffffffff82111715613fd757600080fd5b8060405250919050565b600067ffffffffffffffff821115613ff857600080fd5b602082029050919050565b600067ffffffffffffffff82111561401a57600080fd5b602082029050919050565b600067ffffffffffffffff82111561403c57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561406857600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082905092915050565b600082905092915050565b600082905092915050565b60006140e560208401846134e8565b905092915050565b60006140f882614141565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006141768261417d565b9050919050565b60006141888261418f565b9050919050565b600061419a82614141565b9050919050565b82818337600083830152505050565b60005b838110156141ce5780820151818401526020810190506141b3565b838111156141dd576000848401525b50505050565b6000601f19601f8301169050919050565b6141fd816140ed565b811461420857600080fd5b50565b614214816140ff565b811461421f57600080fd5b50565b61422b8161410b565b811461423657600080fd5b50565b61424281614115565b811461424d57600080fd5b50565b61425981614161565b811461426457600080fd5b5056fea365627a7a72315820b92cba081aa2a863f74aaabaef1c50e22507600b8e328a0ac317bbe67b39c8826c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "340:1553:6:-;;;19842:277:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;650:10;643:6;;:17;;;;;;;;;;;;;;;;;;675:23;691:6;;;;;;;;;;;675:23;;;;;;;;;;;;;;;2454:5;2446:7;;:13;;;;;;;;;;;;;;;;;;2942:40;2539:10;2961:20;;2942:18;;;:40;;:::i;:::-;5088;4962:10;5107:20;;5088:18;;;:40;;:::i;:::-;12557:51;12163:10;12576:31;;12557:18;;;:51;;:::i;:::-;19989:4;19983:5;:10;;;;;;;;;;;;:::i;:::-;;20011:6;20003:7;:14;;;;;;;;;;;;:::i;:::-;;20041:12;20027:13;:26;;;;;;;;;;;;:::i;:::-;;20063:49;19653:10;20082:29;;20063:18;;;:49;;:::i;:::-;19842:277;;;340:1553:6;;3292:158:4;3382:10;3367:25;;:11;:25;;;;;3359:34;;;;;;3439:4;3403:20;:33;3424:11;3403:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3292:158;:::o;340:1553:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:113:-1:-;88:24;106:5;88:24;;;83:3;76:37;70:48;;;125:213;;243:2;232:9;228:18;220:26;;257:71;325:1;314:9;310:17;301:6;257:71;;;214:124;;;;;345:91;;407:24;425:5;407:24;;;396:35;;390:46;;;;443:121;;516:42;509:5;505:54;494:65;;488:76;;;;340:1553:6;;;;;;;",
  "deployedSourceMap": "340:1553:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;340:1553:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3080:133:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1391:500:6;;;;;;;;;;;;;;;;:::i;:::-;;20207:81:4;;;:::i;:::-;;;;;;;;;;;;;;;;6296:167;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5675:615;;;;;;;;;;;;;;;;:::i;:::-;;2200:207;;;;;;;;;;;;;;;;:::i;:::-;;13322:94;;;:::i;:::-;;;;;;;;;;;;;;;;7440:180;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:5;;;;;;;;;;;;;;;;:::i;:::-;;12988:182:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14929:166:5;;;;;;;;;;;;;;;;:::i;:::-;;965:200:6;;;:::i;:::-;;22116:234:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7626:132;;;;;;;;;;;;;;;;:::i;:::-;;24122:400:7;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;13753:148:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5440:162;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5141:293;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;711:83;;;:::i;:::-;;;;;;;;;;;;;;;;20294:85;;;:::i;:::-;;;;;;;;;;;;;;;;6755:213;;;;;;;;;;;;;;;;:::i;:::-;;7764:211;;;;;;;;;;;;;;;;:::i;:::-;;20490:151;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;20385:99;;;:::i;:::-;;;;;;;;;;;;;;;;7289:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1171:336;;;;;;;;;;;;;;;;:::i;:::-;;3080:133;3150:4;3173:20;:33;3194:11;3173:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3166:40;;3080:133;;;:::o;1391:500:6:-;1569:11;1602:5;1609;1591:24;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1591:24:6;;;1581:35;;;;;;1569:47;;1663:10;1634:39;;:13;1648:5;1634:20;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:39;;;1626:67;;;;;;;;;;;;;;;;;;;;;;1712:14;:19;1727:3;1712:19;;;;;;;;;;;;;;;;;;;;;1711:20;1703:55;;;;;;;;;;;;;;;;;;;;;;1776:21;1785:5;1776:21;;;;;;;;;;;;1791:5;1776:21;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1776:21:6;;;;;:8;:21::i;:::-;1768:56;;;;;;;;;;;;;;;;;;;;;;1854:4;1834:14;:19;1849:3;1834:19;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1868:16;1873:2;1876:7;1868:4;:16::i;:::-;;1391:500;;;;;;:::o;20207:81:4:-;20244:13;20276:5;20269:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20207:81;:::o;6296:167::-;6355:7;6432:15;:24;6448:7;6432:24;;;;;;;;;;;;;;;;;;;;;6425:31;;6296:167;;;:::o;5675:615::-;5838:16;5846:7;5838;:16::i;:::-;5832:22;;:2;:22;;;;5824:62;;;;;;;;;;;;;;;;;;;;;;6020:10;:8;:10::i;:::-;6008:22;;:10;:22;;;:57;;;;6034:31;6051:10;:8;:10::i;:::-;6062:2;6034:16;:31::i;:::-;6008:57;6000:112;;;;;;;;;;;;;;;;;;;;;;6199:2;6174:15;:24;6190:7;6174:24;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;6275:7;6272:2;6252:31;;6261:10;:8;:10::i;:::-;6252:31;;;;;;;;;;;;5675:615;;:::o;2200:207::-;953:6;;;;;;;;;;;939:20;;:10;:20;;;931:61;;;;;;;;;;;;;;;;;;;;;;2269:8;2261:7;;:16;;;;;;;;;;;;;;;;;;2290:8;2287:114;;;2318:18;2325:10;2318:18;;;;;;;;;;;;;;;2287:114;;;2370:20;2379:10;2370:20;;;;;;;;;;;;;;;2287:114;2200:207;:::o;13322:94::-;13366:7;13392:10;:17;;;;13385:24;;13322:94;:::o;7440:180::-;7530:39;7549:10;7561:7;7530:18;:39::i;:::-;7522:48;;;;;;7581:32;7595:4;7601:2;7605:7;7581:13;:32::i;:::-;7440:180;;;:::o;14801:122:5:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:5;;;;14876:10;:40::i;:::-;14801:122;;:::o;12988:182:4:-;13068:7;13103:16;13113:5;13103:9;:16::i;:::-;13095:5;:24;13087:33;;;;;;13137:12;:19;13150:5;13137:19;;;;;;;;;;;;;;;13157:5;13137:26;;;;;;;;;;;;;;;;13130:33;;12988:182;;;;:::o;14929:166:5:-;;;;:::o;965:200:6:-;1009:11;1021:13;:20;;;;1009:32;;1053:13;1072:38;;;;;;;;1089:3;1072:38;;;;1098:10;1072:38;;;;;1053:58;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1053:58:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:29;1143:3;1147:10;1129:29;;;;;;;;;;;;;;;;965:200;:::o;22116:234:4:-;22192:4;953:6;;;;;;;;;;;939:20;;:10;:20;;;931:61;;;;;;;;;;;;;;;;;;;;;;22269:23;22281:2;22284:7;22269:11;:23::i;:::-;22302:20;22314:7;22302:11;:20::i;:::-;22339:4;22332:11;;22116:234;;;;:::o;7626:132::-;7712:39;7729:4;7735:2;7739:7;7712:39;;;;;;;;;;;;:16;:39::i;:::-;7626:132;;;:::o;24122:400:7:-;24225:6;24243:25;24282:1;24271:13;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;24271:13:7;;;;24243:41;;24307:6;24316:1;24307:10;;24303:88;24323:12;24319:1;:16;24303:88;;;24372:5;24378:1;24372:8;;;;;;;;;;;24355:11;24367:1;24355:14;;;;;;;;;;;;;:25;;;;;24337:3;;;;;;;24303:88;;;;24434:1;24404:26;24411:11;24424:5;24404:6;:26::i;:::-;:31;24400:116;;;24458:4;24451:11;;;;;24400:116;24500:5;24493:12;;;24122:400;;;;;:::o;13753:148:4:-;13811:7;13846:13;:11;:13::i;:::-;13838:5;:21;13830:30;;;;;;13877:10;13888:5;13877:17;;;;;;;;;;;;;;;;13870:24;;13753:148;;;:::o;5440:162::-;5495:7;5575:11;:20;5587:7;5575:20;;;;;;;;;;;;;;;;;;;;;5568:27;;5440:162;;;:::o;5141:293::-;5196:7;5385:42;5402:17;:24;5420:5;5402:24;;;;;;;;;;;;;;;5385:16;:42::i;:::-;5378:49;;5141:293;;;:::o;711:83::-;751:7;781:6;;;;;;;;;;;774:13;;711:83;:::o;20294:85::-;20333:13;20365:7;20358:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20294:85;:::o;6755:213::-;6840:10;6834:16;;:2;:16;;;;6826:25;;;;;;6898:8;6861:18;:30;6880:10;6861:30;;;;;;;;;;;;;;;:34;6892:2;6861:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;6948:2;6921:40;;6936:10;6921:40;;;6952:8;6921:40;;;;;;;;;;;;;;;6755:213;;:::o;7764:211::-;7870:31;7883:4;7889:2;7893:7;7870:12;:31::i;:::-;7919:48;7942:4;7948:2;7952:7;7961:5;7919:22;:48::i;:::-;7911:57;;;;;;7764:211;;;;:::o;20490:151::-;20548:13;20581:16;20589:7;20581;:16::i;:::-;20573:25;;;;;;20615:10;:19;20626:7;20615:19;;;;;;;;;;;20608:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20490:151;;;:::o;20385:99::-;20432:13;20464;20457:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20385:99;:::o;7289:145::-;7369:4;7392:18;:25;7411:5;7392:25;;;;;;;;;;;;;;;:35;7418:8;7392:35;;;;;;;;;;;;;;;;;;;;;;;;;7385:42;;7289:145;;;;:::o;1171:336::-;953:6;;;;;;;;;;;939:20;;:10;:20;;;931:61;;;;;;;;;;;;;;;;;;;;;;1401:9;1389:21;;:10;:21;;;1381:53;;;;;;;;;;;;;;;;;;;;;;1452:8;1445:6;;:15;;;;;;;;;;;;;;;;;;1475:25;1491:8;1475:25;;;;;;;;;;;;;;;1171:336;:::o;8681:246::-;8766:4;8782:13;8798:16;8806:7;8798;:16::i;:::-;8782:32;;8843:5;8832:16;;:7;:16;;;:51;;;;8876:7;8852:31;;:20;8864:7;8852:11;:20::i;:::-;:31;;;8832:51;:87;;;;8887:32;8904:5;8911:7;8887:16;:32::i;:::-;8832:87;8824:96;;;8681:246;;;;:::o;14276:239::-;14361:38;14381:4;14387:2;14391:7;14361:19;:38::i;:::-;14410:47;14443:4;14449:7;14410:32;:47::i;:::-;14468:40;14496:2;14500:7;14468:27;:40::i;:::-;14276:239;;;:::o;14770:196::-;14833:24;14845:2;14849:7;14833:11;:24::i;:::-;14868:40;14896:2;14900:7;14868:27;:40::i;:::-;14919;14951:7;14919:31;:40::i;:::-;14770:196;;:::o;21119:194::-;21184:16;21192:7;21184;:16::i;:::-;21176:25;;;;;;21211:18;21230:17;21239:7;21230:8;:17::i;:::-;21211:36;;21277:29;21287:13;21277:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21301:4;21277:9;:29::i;:::-;21257:10;:19;21268:7;21257:19;;;;;;;;;;;:49;;;;;;;;;;;;:::i;:::-;;21119:194;;:::o;23196:921:7:-;23276:4;23292:26;23321:77;23292:106;;23408:22;;:::i;:::-;23433:14;:12;:14::i;:::-;23408:39;;23485:2;:12;;;:19;23480:1;23465:5;:12;:16;:39;23457:48;;;;;;23562:27;;:::i;:::-;23592:21;;;;;;;;23608:1;23592:21;;;;23611:1;23592:21;;;23562:51;;23628:6;23637:1;23628:10;;23623:197;23644:5;:12;23640:1;:16;23623:197;;;23696:18;23685:5;23691:1;23685:8;;;;;;;;;;;;;;:29;23677:38;;;;;;23736:73;23753:4;23759:49;23778:2;:12;;;23795:1;23791;:5;23778:19;;;;;;;;;;;;;;23799:5;23805:1;23799:8;;;;;;;;;;;;;;23759:18;:49::i;:::-;23736:16;:73::i;:::-;23729:80;;23658:3;;;;;;;23623:197;;;;23836:39;23853:4;23859:2;:12;;;23872:1;23859:15;;;;;;;;;;;;;;23836:16;:39::i;:::-;23829:46;;23889:193;23924:5;:7;;;23933:5;:7;;;23955:20;23970:4;23955:14;:20::i;:::-;23977:2;:8;;;24000:23;24015:5;:7;;;24000:14;:23::i;:::-;24025:2;:8;;;24048:24;24063:2;:8;;;24048:14;:24::i;:::-;24074:2;:7;;;23889:20;:193::i;:::-;23885:207;;24091:1;24084:8;;;;;;;23885:207;24109:1;24102:8;;;;;23196:921;;;;;:::o;1065:112:0:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11008:347:4:-;11129:4;11154:15;:2;:13;;;:15::i;:::-;11149:58;;11192:4;11185:11;;;;11149:58;11217:13;11249:2;11233:36;;;11270:10;11282:4;11288:7;11297:5;11233:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11233:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11233:70:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11233:70:4;;;;;;;;;11217:86;;4095:10;11331:16;;11321:26;;;:6;:26;;;;11313:35;;;11008:347;;;;;;;:::o;8169:152::-;8226:4;8242:13;8258:11;:20;8270:7;8258:20;;;;;;;;;;;;;;;;;;;;;8242:36;;8312:1;8295:19;;:5;:19;;;;8288:26;;;8169:152;;;:::o;9783:697::-;9953:16;9961:7;9953;:16::i;:::-;9947:22;;:4;:22;;;9939:68;;;;;;;;;;;;;;;;;;;;;;10105:1;10093:14;;:2;:14;;;;10085:23;;;;;;10157:15;:24;10173:7;10157:24;;;;;;;;;;;;10150:32;;;;;;;;;;;10289:2;10268:11;:20;10280:7;10268:20;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;10301:41;10320:17;:21;10338:2;10320:21;;;;;;;;;;;;;;;10301:18;:41::i;:::-;10352:43;10371:17;:23;10389:4;10371:23;;;;;;;;;;;;;;;10352:18;:43::i;:::-;10465:7;10462:2;10448:25;;10457:4;10448:25;;;;;;;;;;;;9783:697;;;:::o;16742:1128::-;17004:22;17029:32;17059:1;17029:12;:18;17042:4;17029:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17004:57;;17071:18;17092:17;:26;17110:7;17092:26;;;;;;;;;;;;17071:47;;17236:14;17222:10;:28;17218:323;;17266:19;17288:12;:18;17301:4;17288:18;;;;;;;;;;;;;;;17307:14;17288:34;;;;;;;;;;;;;;;;17266:56;;17370:11;17337:12;:18;17350:4;17337:18;;;;;;;;;;;;;;;17356:10;17337:30;;;;;;;;;;;;;;;:44;;;;17486:10;17453:17;:30;17471:11;17453:30;;;;;;;;;;;:43;;;;17218:323;;17627:12;:18;17640:4;17627:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;16742:1128;;;;:::o;15588:183::-;15701:12;:16;15714:2;15701:16;;;;;;;;;;;;;;;:23;;;;15672:17;:26;15690:7;15672:26;;;;;;;;;;;:52;;;;15734:12;:16;15747:2;15734:16;;;;;;;;;;;;;;;15756:7;15734:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;15734:30:4;;;;;;;;;;;;;;;;;;;;;;15588:183;;:::o;9084:500::-;9261:2;9239:24;;:11;:20;9251:7;9239:20;;;;;;;;;;;;;;;;;;;;;:24;;;;:42;;;;;9279:1;9267:14;;:2;:14;;;;9239:42;9231:102;;;;;;;;;;;;;;;;;;;;;;9442:2;9421:11;:20;9433:7;9421:20;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;9454:41;9473:17;:21;9491:2;9473:21;;;;;;;;;;;;;;;9454:18;:41::i;:::-;9569:7;9566:2;9546:31;;9555:10;9546:31;;;;;;;;;;;;9084:500;;:::o;15966:161::-;16069:10;:17;;;;16042:15;:24;16058:7;16042:24;;;;;;;;;;;:44;;;;16096:10;16112:7;16096:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16096:24:4;;;;;;;;;;;;;;;;;;;;;;15966:161;:::o;43271:465:5:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:5;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;21240:1951:7:-;21287:22;;:::i;:::-;21332:169;;;;;;;;21356:66;21332:169;;;;21433:66;21332:169;;;21321:2;:8;;:180;;;;21521:327;;;;;;;;;;;;;;;;21546:66;21521:327;;;;21623:66;21521:327;;;;;;;;;;;;;;;21702:66;21521:327;;;;21779:66;21521:327;;;;;;21511:2;:7;;:337;;;;21869:327;;;;;;;;;;;;;;;;21894:66;21869:327;;;;21971:66;21869:327;;;;;;;;;;;;;;;22050:66;21869:327;;;;22127:66;21869:327;;;;;;21858:2;:8;;:338;;;;22217:327;;;;;;;;;;;;;;;;22242:66;22217:327;;;;22319:66;22217:327;;;;;;;;;;;;;;;22398:66;22217:327;;;;22475:66;22217:327;;;;;;22206:2;:8;;:338;;;;22591:1;22569:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22554:2;:12;;:39;;;;22621:169;;;;;;;;22645:66;22621:169;;;;22722:66;22621:169;;;22603:2;:12;;;22616:1;22603:15;;;;;;;;;;;;;:187;;;;22818:169;;;;;;;;22842:66;22818:169;;;;22919:66;22818:169;;;22800:2;:12;;;22813:1;22800:15;;;;;;;;;;;;;:187;;;;23015:169;;;;;;;;23039:66;23015:169;;;;23116:66;23015:169;;;22997:2;:12;;;23010:1;22997:15;;;;;;;;;;;;;:187;;;;21240:1951;:::o;17735:454::-;17804:16;;:::i;:::-;17832:20;;:::i;:::-;17873:1;:3;;;17862:5;17868:1;17862:8;;;;;;;;;;:14;;;;;17897:1;:3;;;17886:5;17892:1;17886:8;;;;;;;;;;:14;;;;;17921:1;17910:5;17916:1;17910:8;;;;;;;;;;:12;;;;;17932;18036:4;18033:1;18027:4;18020:5;18017:1;18010:4;18003:5;17999:16;17988:53;17977:64;;18118:7;18131:1;18126:20;;;;18111:35;;18126:20;18135:9;18111:35;;18174:7;18165:17;;;;;;17735:454;;;;;;:::o;16804:493::-;16883:16;;:::i;:::-;16911:20;;:::i;:::-;16952:2;:4;;;16941:5;16947:1;16941:8;;;;;;;;;;:15;;;;;16977:2;:4;;;16966:5;16972:1;16966:8;;;;;;;;;;:15;;;;;17002:2;:4;;;16991:5;16997:1;16991:8;;;;;;;;;;:15;;;;;17027:2;:4;;;17016:5;17022:1;17016:8;;;;;;;;;;:15;;;;;17041:12;17145:4;17142:1;17136:4;17129:5;17126:1;17119:4;17112:5;17108:16;17097:53;17086:64;;17227:7;17240:1;17235:20;;;;17220:35;;17235:20;17244:9;17220:35;;17282:7;17274:16;;;;;;16804:493;;;;;;:::o;16413:340::-;16470:14;;:::i;:::-;16548:6;16557:77;16548:86;;16655:1;16648;:3;;;:8;:20;;;;;16667:1;16660;:3;;;:8;16648:20;16644:58;;;16689:13;;;;;;;;16697:1;16689:13;;;;16700:1;16689:13;;;16682:20;;;;;16644:58;16719:27;;;;;;;;16727:1;:3;;;16719:27;;;;16743:1;16737;:3;;;:7;;;;;;16732:1;:13;16719:27;;;16712:34;;;16413:340;;;;:::o;20331:552::-;20582:4;20598:19;20634:1;20620:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20598:38;;20646:19;20682:1;20668:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20646:38;;20702:2;20694;20697:1;20694:5;;;;;;;;;;;;;:10;;;;20722:2;20714;20717:1;20714:5;;;;;;;;;;;;;:10;;;;20742:2;20734;20737:1;20734:5;;;;;;;;;;;;;:10;;;;20762:2;20754;20757:1;20754:5;;;;;;;;;;;;;:10;;;;20782:2;20774;20777:1;20774:5;;;;;;;;;;;;;:10;;;;20802:2;20794;20797:1;20794:5;;;;;;;;;;;;;:10;;;;20822:2;20814;20817:1;20814:5;;;;;;;;;;;;;:10;;;;20842:2;20834;20837:1;20834:5;;;;;;;;;;;;;:10;;;;20861:15;20869:2;20873;20861:7;:15::i;:::-;20854:22;;;;20331:552;;;;;;;;;;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;1183:178:0:-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1367:108::-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;40282:1020:5:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:5;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;18400:923:7:-;18482:4;18519:2;:9;18506:2;:9;:22;18498:31;;;;;;18539:13;18555:2;:9;18539:25;;18574:14;18602:1;18591:8;:12;18574:29;;18613:19;18646:9;18635:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;18635:21:7;;;;18613:43;;18671:6;18680:1;18671:10;;18666:307;18687:8;18683:1;:12;18666:307;;;18743:2;18746:1;18743:5;;;;;;;;;;;;;;:7;;;18724:5;18738:1;18734;18730;:5;:9;18724:16;;;;;;;;;;;;;:26;;;;;18783:2;18786:1;18783:5;;;;;;;;;;;;;;:7;;;18764:5;18778:1;18774;18770;:5;:9;18764:16;;;;;;;;;;;;;:26;;;;;18823:2;18826:1;18823:5;;;;;;;;;;;;;;:7;;;18831:1;18823:10;;;;;;;;;;;18804:5;18818:1;18814;18810;:5;:9;18804:16;;;;;;;;;;;;;:29;;;;;18866:2;18869:1;18866:5;;;;;;;;;;;;;;:7;;;18874:1;18866:10;;;;;;;;;;;18847:5;18861:1;18857;18853;:5;:9;18847:16;;;;;;;;;;;;;:29;;;;;18909:2;18912:1;18909:5;;;;;;;;;;;;;;:7;;;18917:1;18909:10;;;;;;;;;;;18890:5;18904:1;18900;18896;:5;:9;18890:16;;;;;;;;;;;;;:29;;;;;18952:2;18955:1;18952:5;;;;;;;;;;;;;;:7;;;18960:1;18952:10;;;;;;;;;;;18933:5;18947:1;18943;18939;:5;:9;18933:16;;;;;;;;;;;;;:29;;;;;18697:3;;;;;;;18666:307;;;;18982:18;;:::i;:::-;19010:12;19143:4;19138:3;19131:4;19120:9;19116:20;19109:4;19102:5;19098:16;19095:1;19088:4;19081:5;19077:16;19066:82;19055:93;;19225:7;19238:1;19233:20;;;;19218:35;;19233:20;19242:9;19218:35;;19280:7;19272:16;;;;;;19315:1;19305:3;19309:1;19305:6;;;;;;;;;;;:11;;19298:18;;;;;;;18400:923;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;340:1553:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;340:1553:6;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;340:1553:6;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;340:1553:6;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;340:1553:6;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;161:176;;260:6;248:18;;310:3;302:4;296;292:15;282:8;278:30;275:39;272:2;;;327:1;324;317:12;272:2;241:96;;;;;364:608;;475:3;468:4;460:6;456:17;452:27;442:2;;493:1;490;483:12;442:2;517:4;536:74;551:58;602:6;551:58;;;536:74;;;527:83;;627:5;686:6;733:3;725:4;717:6;713:17;708:3;704:27;701:36;698:2;;;750:1;747;740:12;698:2;775:1;760:206;785:6;782:1;779:13;760:206;;;843:3;865:37;898:3;886:10;865:37;;;860:3;853:50;926:4;921:3;917:14;910:21;;954:4;949:3;945:14;938:21;;817:149;807:1;804;800:9;795:14;;760:206;;;764:14;435:537;;;;;;;;999:616;;1114:3;1107:4;1099:6;1095:17;1091:27;1081:2;;1132:1;1129;1122:12;1081:2;1156:4;1175:78;1190:62;1245:6;1190:62;;;1175:78;;;1166:87;;1270:5;1329:6;1376:3;1368:4;1360:6;1356:17;1351:3;1347:27;1344:36;1341:2;;;1393:1;1390;1383:12;1341:2;1418:1;1403:206;1428:6;1425:1;1422:13;1403:206;;;1486:3;1508:37;1541:3;1529:10;1508:37;;;1503:3;1496:50;1569:4;1564:3;1560:14;1553:21;;1597:4;1592:3;1588:14;1581:21;;1460:149;1450:1;1447;1443:9;1438:14;;1403:206;;;1407:14;1074:541;;;;;;;;1623:124;;1700:6;1687:20;1678:29;;1712:30;1736:5;1712:30;;;1672:75;;;;;1754:130;;1834:6;1821:20;1812:29;;1846:33;1873:5;1846:33;;;1806:78;;;;;1891:128;;1970:6;1957:20;1948:29;;1982:32;2008:5;1982:32;;;1942:77;;;;;2026:132;;2109:6;2103:13;2094:22;;2121:32;2147:5;2121:32;;;2088:70;;;;;2166:440;;2267:3;2260:4;2252:6;2248:17;2244:27;2234:2;;2285:1;2282;2275:12;2234:2;2322:6;2309:20;2344:64;2359:48;2400:6;2359:48;;;2344:64;;;2335:73;;2428:6;2421:5;2414:21;2464:4;2456:6;2452:17;2497:4;2490:5;2486:16;2532:3;2523:6;2518:3;2514:16;2511:25;2508:2;;;2549:1;2546;2539:12;2508:2;2559:41;2593:6;2588:3;2583;2559:41;;;2227:379;;;;;;;;2615:442;;2717:3;2710:4;2702:6;2698:17;2694:27;2684:2;;2735:1;2732;2725:12;2684:2;2772:6;2759:20;2794:65;2809:49;2851:6;2809:49;;;2794:65;;;2785:74;;2879:6;2872:5;2865:21;2915:4;2907:6;2903:17;2948:4;2941:5;2937:16;2983:3;2974:6;2969:3;2965:16;2962:25;2959:2;;;3000:1;2997;2990:12;2959:2;3010:41;3044:6;3039:3;3034;3010:41;;;2677:380;;;;;;;;3094:457;;3204:4;3192:9;3187:3;3183:19;3179:30;3176:2;;;3222:1;3219;3212:12;3176:2;3240:20;3255:4;3240:20;;;3231:29;;3307:1;3339:49;3384:3;3375:6;3364:9;3360:22;3339:49;;;3332:4;3325:5;3321:16;3314:75;3270:130;3447:2;3480:49;3525:3;3516:6;3505:9;3501:22;3480:49;;;3473:4;3466:5;3462:16;3455:75;3410:131;3170:381;;;;;3587:495;;3697:4;3685:9;3680:3;3676:19;3672:30;3669:2;;;3715:1;3712;3705:12;3669:2;3733:20;3748:4;3733:20;;;3724:29;;3800:1;3832:68;3896:3;3887:6;3876:9;3872:22;3832:68;;;3825:4;3818:5;3814:16;3807:94;3763:149;3959:2;3992:68;4056:3;4047:6;4036:9;4032:22;3992:68;;;3985:4;3978:5;3974:16;3967:94;3922:150;3663:419;;;;;4125:157;;4234:3;4225:6;4220:3;4216:16;4212:26;4209:2;;;4251:1;4248;4241:12;4209:2;4270:6;4261:15;;4202:80;;;;;4323:666;;4435:6;4423:9;4418:3;4414:19;4410:32;4407:2;;;4455:1;4452;4445:12;4407:2;4473:20;4488:4;4473:20;;;4464:29;;4540:1;4572:70;4638:3;4629:6;4618:9;4614:22;4572:70;;;4565:4;4558:5;4554:16;4547:96;4503:151;4701:2;4734:70;4800:3;4791:6;4780:9;4776:22;4734:70;;;4727:4;4720:5;4716:16;4709:96;4664:152;4863:3;4897:70;4963:3;4954:6;4943:9;4939:22;4897:70;;;4890:4;4883:5;4879:16;4872:96;4826:153;4401:588;;;;;4996:130;;5076:6;5063:20;5054:29;;5088:33;5115:5;5088:33;;;5048:78;;;;;5133:241;;5237:2;5225:9;5216:7;5212:23;5208:32;5205:2;;;5253:1;5250;5243:12;5205:2;5288:1;5305:53;5350:7;5341:6;5330:9;5326:22;5305:53;;;5295:63;;5267:97;5199:175;;;;;5381:366;;;5502:2;5490:9;5481:7;5477:23;5473:32;5470:2;;;5518:1;5515;5508:12;5470:2;5553:1;5570:53;5615:7;5606:6;5595:9;5591:22;5570:53;;;5560:63;;5532:97;5660:2;5678:53;5723:7;5714:6;5703:9;5699:22;5678:53;;;5668:63;;5639:98;5464:283;;;;;;5754:491;;;;5892:2;5880:9;5871:7;5867:23;5863:32;5860:2;;;5908:1;5905;5898:12;5860:2;5943:1;5960:53;6005:7;5996:6;5985:9;5981:22;5960:53;;;5950:63;;5922:97;6050:2;6068:53;6113:7;6104:6;6093:9;6089:22;6068:53;;;6058:63;;6029:98;6158:2;6176:53;6221:7;6212:6;6201:9;6197:22;6176:53;;;6166:63;;6137:98;5854:391;;;;;;6252:721;;;;;6416:3;6404:9;6395:7;6391:23;6387:33;6384:2;;;6433:1;6430;6423:12;6384:2;6468:1;6485:53;6530:7;6521:6;6510:9;6506:22;6485:53;;;6475:63;;6447:97;6575:2;6593:53;6638:7;6629:6;6618:9;6614:22;6593:53;;;6583:63;;6554:98;6683:2;6701:53;6746:7;6737:6;6726:9;6722:22;6701:53;;;6691:63;;6662:98;6819:2;6808:9;6804:18;6791:32;6843:18;6835:6;6832:30;6829:2;;;6875:1;6872;6865:12;6829:2;6895:62;6949:7;6940:6;6929:9;6925:22;6895:62;;;6885:72;;6770:193;6378:595;;;;;;;;6980:360;;;7098:2;7086:9;7077:7;7073:23;7069:32;7066:2;;;7114:1;7111;7104:12;7066:2;7149:1;7166:53;7211:7;7202:6;7191:9;7187:22;7166:53;;;7156:63;;7128:97;7256:2;7274:50;7316:7;7307:6;7296:9;7292:22;7274:50;;;7264:60;;7235:95;7060:280;;;;;;7347:366;;;7468:2;7456:9;7447:7;7443:23;7439:32;7436:2;;;7484:1;7481;7474:12;7436:2;7519:1;7536:53;7581:7;7572:6;7561:9;7557:22;7536:53;;;7526:63;;7498:97;7626:2;7644:53;7689:7;7680:6;7669:9;7665:22;7644:53;;;7634:63;;7605:98;7430:283;;;;;;7720:235;;7821:2;7809:9;7800:7;7796:23;7792:32;7789:2;;;7837:1;7834;7827:12;7789:2;7872:1;7889:50;7931:7;7922:6;7911:9;7907:22;7889:50;;;7879:60;;7851:94;7783:172;;;;;7962:472;;;8093:2;8081:9;8072:7;8068:23;8064:32;8061:2;;;8109:1;8106;8099:12;8061:2;8144:1;8161:53;8206:7;8197:6;8186:9;8182:22;8161:53;;;8151:63;;8123:97;8279:2;8268:9;8264:18;8251:32;8303:18;8295:6;8292:30;8289:2;;;8335:1;8332;8325:12;8289:2;8355:63;8410:7;8401:6;8390:9;8386:22;8355:63;;;8345:73;;8230:194;8055:379;;;;;;8441:701;;;;8598:2;8586:9;8577:7;8573:23;8569:32;8566:2;;;8614:1;8611;8604:12;8566:2;8649:1;8666:53;8711:7;8702:6;8691:9;8687:22;8666:53;;;8656:63;;8628:97;8784:2;8773:9;8769:18;8756:32;8808:18;8800:6;8797:30;8794:2;;;8840:1;8837;8830:12;8794:2;8860:63;8915:7;8906:6;8895:9;8891:22;8860:63;;;8850:73;;8735:194;8988:2;8977:9;8973:18;8960:32;9012:18;9004:6;9001:30;8998:2;;;9044:1;9041;9034:12;8998:2;9064:62;9118:7;9109:6;9098:9;9094:22;9064:62;;;9054:72;;8939:193;8560:582;;;;;;9149:239;;9252:2;9240:9;9231:7;9227:23;9223:32;9220:2;;;9268:1;9265;9258:12;9220:2;9303:1;9320:52;9364:7;9355:6;9344:9;9340:22;9320:52;;;9310:62;;9282:96;9214:174;;;;;9395:261;;9509:2;9497:9;9488:7;9484:23;9480:32;9477:2;;;9525:1;9522;9515:12;9477:2;9560:1;9577:63;9632:7;9623:6;9612:9;9608:22;9577:63;;;9567:73;;9539:107;9471:185;;;;;9663:288;;9790:3;9778:9;9769:7;9765:23;9761:33;9758:2;;;9807:1;9804;9797:12;9758:2;9842:1;9859:76;9927:7;9918:6;9907:9;9903:22;9859:76;;;9849:86;;9821:120;9752:199;;;;;9958:460;;;10125:3;10113:9;10104:7;10100:23;10096:33;10093:2;;;10142:1;10139;10132:12;10093:2;10177:1;10194:76;10262:7;10253:6;10242:9;10238:22;10194:76;;;10184:86;;10156:120;10307:3;10326:76;10394:7;10385:6;10374:9;10370:22;10326:76;;;10316:86;;10286:122;10087:331;;;;;;10425:241;;10529:2;10517:9;10508:7;10504:23;10500:32;10497:2;;;10545:1;10542;10535:12;10497:2;10580:1;10597:53;10642:7;10633:6;10622:9;10618:22;10597:53;;;10587:63;;10559:97;10491:175;;;;;10673:845;;;;;;10895:3;10883:9;10874:7;10870:23;10866:33;10863:2;;;10912:1;10909;10902:12;10863:2;10947:1;10964:53;11009:7;11000:6;10989:9;10985:22;10964:53;;;10954:63;;10926:97;11054:2;11072:78;11142:7;11133:6;11122:9;11118:22;11072:78;;;11062:88;;11033:123;11187:3;11206:78;11276:7;11267:6;11256:9;11252:22;11206:78;;;11196:88;;11166:124;11321:3;11340:53;11385:7;11376:6;11365:9;11361:22;11340:53;;;11330:63;;11300:99;11430:3;11449:53;11494:7;11485:6;11474:9;11470:22;11449:53;;;11439:63;;11409:99;10857:661;;;;;;;;;11525:142;11616:45;11655:5;11616:45;;;11611:3;11604:58;11598:69;;;11674:113;11757:24;11775:5;11757:24;;;11752:3;11745:37;11739:48;;;11827:167;11947:41;11983:4;11978:3;11971:5;11947:41;;;11940:54;;;12035:153;12141:41;12177:4;12172:3;12165:5;12141:41;;;12134:54;;;12196:104;12273:21;12288:5;12273:21;;;12268:3;12261:34;12255:45;;;12307:343;;12417:38;12449:5;12417:38;;;12467:70;12530:6;12525:3;12467:70;;;12460:77;;12542:52;12587:6;12582:3;12575:4;12568:5;12564:16;12542:52;;;12615:29;12637:6;12615:29;;;12610:3;12606:39;12599:46;;12397:253;;;;;;12657:347;;12769:39;12802:5;12769:39;;;12820:71;12884:6;12879:3;12820:71;;;12813:78;;12896:52;12941:6;12936:3;12929:4;12922:5;12918:16;12896:52;;;12969:29;12991:6;12969:29;;;12964:3;12960:39;12953:46;;12749:255;;;;;;13012:371;;13172:67;13236:2;13231:3;13172:67;;;13165:74;;13272:34;13268:1;13263:3;13259:11;13252:55;13341:4;13336:2;13331:3;13327:12;13320:26;13374:2;13369:3;13365:12;13358:19;;13158:225;;;;13392:380;;13552:67;13616:2;13611:3;13552:67;;;13545:74;;13652:34;13648:1;13643:3;13639:11;13632:55;13721:13;13716:2;13711:3;13707:12;13700:35;13763:2;13758:3;13754:12;13747:19;;13538:234;;;;13781:320;;13941:67;14005:2;14000:3;13941:67;;;13934:74;;14041:22;14037:1;14032:3;14028:11;14021:43;14092:2;14087:3;14083:12;14076:19;;13927:174;;;;14110:328;;14270:67;14334:2;14329:3;14270:67;;;14263:74;;14370:30;14366:1;14361:3;14357:11;14350:51;14429:2;14424:3;14420:12;14413:19;;14256:182;;;;14447:328;;14607:67;14671:2;14666:3;14607:67;;;14600:74;;14707:30;14703:1;14698:3;14694:11;14687:51;14766:2;14761:3;14757:12;14750:19;;14593:182;;;;14784:384;;14944:67;15008:2;15003:3;14944:67;;;14937:74;;15044:34;15040:1;15035:3;15031:11;15024:55;15113:17;15108:2;15103:3;15099:12;15092:39;15159:2;15154:3;15150:12;15143:19;;14930:238;;;;15177:316;;15337:67;15401:2;15396:3;15337:67;;;15330:74;;15437:18;15433:1;15428:3;15424:11;15417:39;15484:2;15479:3;15475:12;15468:19;;15323:170;;;;15502:323;;15662:67;15726:2;15721:3;15662:67;;;15655:74;;15762:25;15758:1;15753:3;15749:11;15742:46;15816:2;15811:3;15807:12;15800:19;;15648:177;;;;15834:323;;15994:67;16058:2;16053:3;15994:67;;;15987:74;;16094:25;16090:1;16085:3;16081:11;16074:46;16148:2;16143:3;16139:12;16132:19;;15980:177;;;;16220:512;16351:4;16346:3;16342:14;16414:50;16458:4;16451:5;16447:16;16440:5;16414:50;;;16470:63;16527:4;16522:3;16518:14;16504:12;16470:63;;;16371:168;16592:50;16636:4;16629:5;16625:16;16618:5;16592:50;;;16648:63;16705:4;16700:3;16696:14;16682:12;16648:63;;;16549:168;16324:408;;;;16794:642;16925:4;16920:3;16916:14;16988:71;17053:4;17046:5;17042:16;17035:5;16988:71;;;17065:107;17166:4;17161:3;17157:14;17143:12;17065:107;;;16945:233;17231:71;17296:4;17289:5;17285:16;17278:5;17231:71;;;17308:107;17409:4;17404:3;17400:14;17386:12;17308:107;;;17188:233;16898:538;;;;17508:915;17649:6;17644:3;17640:16;17714:73;17781:4;17774:5;17770:16;17763:5;17714:73;;;17793:111;17898:4;17893:3;17889:14;17875:12;17793:111;;;17671:239;17963:73;18030:4;18023:5;18019:16;18012:5;17963:73;;;18042:111;18147:4;18142:3;18138:14;18124:12;18042:111;;;17920:239;18212:73;18279:4;18272:5;18268:16;18261:5;18212:73;;;18291:111;18396:4;18391:3;18387:14;18373:12;18291:111;;;18169:239;17622:801;;;;18430:103;18503:24;18521:5;18503:24;;;18498:3;18491:37;18485:48;;;18540:113;18623:24;18641:5;18623:24;;;18618:3;18611:37;18605:48;;;18660:213;;18778:2;18767:9;18763:18;18755:26;;18792:71;18860:1;18849:9;18845:17;18836:6;18792:71;;;18749:124;;;;;18880:229;;19006:2;18995:9;18991:18;18983:26;;19020:79;19096:1;19085:9;19081:17;19072:6;19020:79;;;18977:132;;;;;19116:647;;19344:3;19333:9;19329:19;19321:27;;19359:79;19435:1;19424:9;19420:17;19411:6;19359:79;;;19449:72;19517:2;19506:9;19502:18;19493:6;19449:72;;;19532;19600:2;19589:9;19585:18;19576:6;19532:72;;;19652:9;19646:4;19642:20;19637:2;19626:9;19622:18;19615:48;19677:76;19748:4;19739:6;19677:76;;;19669:84;;19315:448;;;;;;;;19770:201;;19882:2;19871:9;19867:18;19859:26;;19896:65;19958:1;19947:9;19943:17;19934:6;19896:65;;;19853:118;;;;;19978:301;;20116:2;20105:9;20101:18;20093:26;;20166:9;20160:4;20156:20;20152:1;20141:9;20137:17;20130:47;20191:78;20264:4;20255:6;20191:78;;;20183:86;;20087:192;;;;;20286:407;;20477:2;20466:9;20462:18;20454:26;;20527:9;20521:4;20517:20;20513:1;20502:9;20498:17;20491:47;20552:131;20678:4;20552:131;;;20544:139;;20448:245;;;;20700:407;;20891:2;20880:9;20876:18;20868:26;;20941:9;20935:4;20931:20;20927:1;20916:9;20912:17;20905:47;20966:131;21092:4;20966:131;;;20958:139;;20862:245;;;;21114:407;;21305:2;21294:9;21290:18;21282:26;;21355:9;21349:4;21345:20;21341:1;21330:9;21326:17;21319:47;21380:131;21506:4;21380:131;;;21372:139;;21276:245;;;;21528:407;;21719:2;21708:9;21704:18;21696:26;;21769:9;21763:4;21759:20;21755:1;21744:9;21740:17;21733:47;21794:131;21920:4;21794:131;;;21786:139;;21690:245;;;;21942:407;;22133:2;22122:9;22118:18;22110:26;;22183:9;22177:4;22173:20;22169:1;22158:9;22154:17;22147:47;22208:131;22334:4;22208:131;;;22200:139;;22104:245;;;;22356:407;;22547:2;22536:9;22532:18;22524:26;;22597:9;22591:4;22587:20;22583:1;22572:9;22568:17;22561:47;22622:131;22748:4;22622:131;;;22614:139;;22518:245;;;;22770:407;;22961:2;22950:9;22946:18;22938:26;;23011:9;23005:4;23001:20;22997:1;22986:9;22982:17;22975:47;23036:131;23162:4;23036:131;;;23028:139;;22932:245;;;;23184:407;;23375:2;23364:9;23360:18;23352:26;;23425:9;23419:4;23415:20;23411:1;23400:9;23396:17;23389:47;23450:131;23576:4;23450:131;;;23442:139;;23346:245;;;;23598:407;;23789:2;23778:9;23774:18;23766:26;;23839:9;23833:4;23829:20;23825:1;23814:9;23810:17;23803:47;23864:131;23990:4;23864:131;;;23856:139;;23760:245;;;;24012:518;;24254:3;24243:9;24239:19;24231:27;;24269:119;24385:1;24374:9;24370:17;24361:6;24269:119;;;24399:121;24515:3;24504:9;24500:19;24491:6;24399:121;;;24225:305;;;;;;24537:213;;24655:2;24644:9;24640:18;24632:26;;24669:71;24737:1;24726:9;24722:17;24713:6;24669:71;;;24626:124;;;;;24757:340;;24911:2;24900:9;24896:18;24888:26;;24925:71;24993:1;24982:9;24978:17;24969:6;24925:71;;;25007:80;25083:2;25072:9;25068:18;25059:6;25007:80;;;24882:215;;;;;;25104:256;;25166:2;25160:9;25150:19;;25204:4;25196:6;25192:17;25303:6;25291:10;25288:22;25267:18;25255:10;25252:34;25249:62;25246:2;;;25324:1;25321;25314:12;25246:2;25344:10;25340:2;25333:22;25144:216;;;;;25367:240;;25520:18;25512:6;25509:30;25506:2;;;25552:1;25549;25542:12;25506:2;25587:4;25579:6;25575:17;25567:25;;25443:164;;;;25614:244;;25771:18;25763:6;25760:30;25757:2;;;25803:1;25800;25793:12;25757:2;25838:4;25830:6;25826:17;25818:25;;25694:164;;;;25865:321;;26008:18;26000:6;25997:30;25994:2;;;26040:1;26037;26030:12;25994:2;26107:4;26103:9;26096:4;26088:6;26084:17;26080:33;26072:41;;26171:4;26165;26161:15;26153:23;;25931:255;;;;26193:322;;26337:18;26329:6;26326:30;26323:2;;;26369:1;26366;26359:12;26323:2;26436:4;26432:9;26425:4;26417:6;26413:17;26409:33;26401:41;;26500:4;26494;26490:15;26482:23;;26260:255;;;;26522:121;;26615:5;26609:12;26599:22;;26580:63;;;;26650:122;;26744:5;26738:12;26728:22;;26709:63;;;;26780:162;;26894:6;26889:3;26882:19;26931:4;26926:3;26922:14;26907:29;;26875:67;;;;;26951:163;;27066:6;27061:3;27054:19;27103:4;27098:3;27094:14;27079:29;;27047:67;;;;;27123:104;;27218:3;27209:12;;27202:25;;;;;27236:106;;27333:3;27324:12;;27317:25;;;;;27351:106;;27448:3;27439:12;;27432:25;;;;;27466:119;;27540:39;27575:2;27570:3;27566:12;27561:3;27540:39;;;27531:48;;27524:61;;;;;27593:91;;27655:24;27673:5;27655:24;;;27644:35;;27638:46;;;;27691:85;;27764:5;27757:13;27750:21;27739:32;;27733:43;;;;27783:72;;27845:5;27834:16;;27828:27;;;;27862:144;;27934:66;27927:5;27923:78;27912:89;;27906:100;;;;28013:121;;28086:42;28079:5;28075:54;28064:65;;28058:76;;;;28141:72;;28203:5;28192:16;;28186:27;;;;28220:129;;28307:37;28338:5;28307:37;;;28294:50;;28288:61;;;;28356:121;;28435:37;28466:5;28435:37;;;28422:50;;28416:61;;;;28484:108;;28563:24;28581:5;28563:24;;;28550:37;;28544:48;;;;28600:145;28681:6;28676:3;28671;28658:30;28737:1;28728:6;28723:3;28719:16;28712:27;28651:94;;;;28754:268;28819:1;28826:101;28840:6;28837:1;28834:13;28826:101;;;28916:1;28911:3;28907:11;28901:18;28897:1;28892:3;28888:11;28881:39;28862:2;28859:1;28855:10;28850:15;;28826:101;;;28942:6;28939:1;28936:13;28933:2;;;29007:1;28998:6;28993:3;28989:16;28982:27;28933:2;28803:219;;;;;29030:97;;29118:2;29114:7;29109:2;29102:5;29098:14;29094:28;29084:38;;29078:49;;;;29135:117;29204:24;29222:5;29204:24;;;29197:5;29194:35;29184:2;;29243:1;29240;29233:12;29184:2;29178:74;;29259:111;29325:21;29340:5;29325:21;;;29318:5;29315:32;29305:2;;29361:1;29358;29351:12;29305:2;29299:71;;29377:117;29446:24;29464:5;29446:24;;;29439:5;29436:35;29426:2;;29485:1;29482;29475:12;29426:2;29420:74;;29501:115;29569:23;29586:5;29569:23;;;29562:5;29559:34;29549:2;;29607:1;29604;29597:12;29549:2;29543:73;;29623:117;29692:24;29710:5;29692:24;;;29685:5;29682:35;29672:2;;29731:1;29728;29721:12;29672:2;29666:74;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\npragma experimental ABIEncoderV2;\nimport \"./SquareVerifier.sol\";\nimport \"./ERC721Mintable.sol\";\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is CustomERC721Token, SquareVerifier {\n    // TODO define a solutions struct that can hold an index & an address\n    struct solutions {\n        uint256 index;\n        address addr;\n    }\n\n    // TODO define an array of the above struct\n    solutions[] private solutionArray;\n\n   \n\n    // TODO define a mapping to store unique solutions submitted\n    mapping(bytes32 => bool)  uniqueSolution;\n\n    // TODO Create an event to emit when a solution is added\n    event solutionAdded(uint256 index, address owner);\n\n    // TODO Create a function to add the solutions to the array and emit the event\n    function addSolution() external {\n          uint256 len=solutionArray.length;\n          solutionArray.push(solutions({index:len,addr:msg.sender}));\n          emit  solutionAdded(len,msg.sender);\n    }\n    // TODO Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSuplly\n    function mintNewNFT(\n        uint256 index,\n        Proof calldata proof,\n        uint256[2] calldata input,\n        address to,\n        uint256 tokenId\n    ) external {\n        bytes32 key=keccak256(abi.encode(proof, input));\n        require(solutionArray[index].addr == msg.sender,\"incorrect caller\");\n        require(!uniqueSolution[key],\"solution is used before\");\n        require(verifyTx(proof,input),\"solution is not correct\");\n        uniqueSolution[key]=true;\n        mint(to,tokenId);\n    }\n}\n",
  "sourcePath": "/home/amr/BlockChain/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7823
      ]
    },
    "id": 7824,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7708,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "id": 7709,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:6"
      },
      {
        "absolutePath": "project:/contracts/SquareVerifier.sol",
        "file": "./SquareVerifier.sol",
        "id": 7710,
        "nodeType": "ImportDirective",
        "scope": 7824,
        "sourceUnit": 10302,
        "src": "67:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7711,
        "nodeType": "ImportDirective",
        "scope": 7824,
        "sourceUnit": 1439,
        "src": "98:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7712,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1438,
              "src": "371:17:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1438",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7713,
            "nodeType": "InheritanceSpecifier",
            "src": "371:17:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7714,
              "name": "SquareVerifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10301,
              "src": "390:14:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SquareVerifier_$10301",
                "typeString": "contract SquareVerifier"
              }
            },
            "id": 7715,
            "nodeType": "InheritanceSpecifier",
            "src": "390:14:6"
          }
        ],
        "contractDependencies": [
          398,
          455,
          501,
          990,
          1288,
          1401,
          1438,
          7706,
          10301
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7823,
        "linearizedBaseContracts": [
          7823,
          10301,
          1438,
          1401,
          7706,
          1288,
          990,
          501,
          455,
          398
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.solutions",
            "id": 7720,
            "members": [
              {
                "constant": false,
                "id": 7717,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7720,
                "src": "512:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7716,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "512:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7719,
                "name": "addr",
                "nodeType": "VariableDeclaration",
                "scope": 7720,
                "src": "535:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7718,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "535:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "solutions",
            "nodeType": "StructDefinition",
            "scope": 7823,
            "src": "485:69:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7723,
            "name": "solutionArray",
            "nodeType": "VariableDeclaration",
            "scope": 7823,
            "src": "608:33:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_solutions_$7720_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.solutions[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7721,
                "name": "solutions",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7720,
                "src": "608:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_solutions_$7720_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.solutions"
                }
              },
              "id": 7722,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "608:11:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_solutions_$7720_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.solutions[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7727,
            "name": "uniqueSolution",
            "nodeType": "VariableDeclaration",
            "scope": 7823,
            "src": "718:40:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 7726,
              "keyType": {
                "id": 7724,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "726:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "718:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 7725,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "737:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7733,
            "name": "solutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7729,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7733,
                  "src": "846:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7728,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "846:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7731,
                  "indexed": false,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 7733,
                  "src": "861:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "845:30:6"
            },
            "src": "826:50:6"
          },
          {
            "body": {
              "id": 7757,
              "nodeType": "Block",
              "src": "997:168:6",
              "statements": [
                {
                  "assignments": [
                    7737
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7737,
                      "name": "len",
                      "nodeType": "VariableDeclaration",
                      "scope": 7757,
                      "src": "1009:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7736,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1009:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7740,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 7738,
                      "name": "solutionArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7723,
                      "src": "1021:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_solutions_$7720_storage_$dyn_storage",
                        "typeString": "struct SolnSquareVerifier.solutions storage ref[] storage ref"
                      }
                    },
                    "id": 7739,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1021:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1009:32:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7745,
                            "name": "len",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7737,
                            "src": "1089:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7746,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10316,
                              "src": "1098:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1098:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 7744,
                          "name": "solutions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7720,
                          "src": "1072:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_solutions_$7720_storage_ptr_$",
                            "typeString": "type(struct SolnSquareVerifier.solutions storage pointer)"
                          }
                        },
                        "id": 7748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "index",
                          "addr"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "1072:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_solutions_$7720_memory",
                          "typeString": "struct SolnSquareVerifier.solutions memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_solutions_$7720_memory",
                          "typeString": "struct SolnSquareVerifier.solutions memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7741,
                        "name": "solutionArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7723,
                        "src": "1053:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_solutions_$7720_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.solutions storage ref[] storage ref"
                        }
                      },
                      "id": 7743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1053:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_solutions_$7720_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.solutions storage ref) returns (uint256)"
                      }
                    },
                    "id": 7749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1053:58:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7750,
                  "nodeType": "ExpressionStatement",
                  "src": "1053:58:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7752,
                        "name": "len",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7737,
                        "src": "1143:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7753,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10316,
                          "src": "1147:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1147:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7751,
                      "name": "solutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7733,
                      "src": "1129:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1129:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7756,
                  "nodeType": "EmitStatement",
                  "src": "1123:35:6"
                }
              ]
            },
            "documentation": null,
            "id": 7758,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "985:2:6"
            },
            "returnParameters": {
              "id": 7735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "997:0:6"
            },
            "scope": 7823,
            "src": "965:200:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7821,
              "nodeType": "Block",
              "src": "1559:332:6",
              "statements": [
                {
                  "assignments": [
                    7774
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7774,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7821,
                      "src": "1569:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7773,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1569:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7782,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7778,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7762,
                            "src": "1602:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$9975_calldata_ptr",
                              "typeString": "struct SquareVerifier.Proof calldata"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7779,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7766,
                            "src": "1609:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                              "typeString": "uint256[2] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$9975_calldata_ptr",
                              "typeString": "struct SquareVerifier.Proof calldata"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                              "typeString": "uint256[2] calldata"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7776,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10303,
                            "src": "1591:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1591:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1591:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7775,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10310,
                      "src": "1581:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1581:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1569:47:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7784,
                              "name": "solutionArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7723,
                              "src": "1634:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_solutions_$7720_storage_$dyn_storage",
                                "typeString": "struct SolnSquareVerifier.solutions storage ref[] storage ref"
                              }
                            },
                            "id": 7786,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7785,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7760,
                              "src": "1648:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1634:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_solutions_$7720_storage",
                              "typeString": "struct SolnSquareVerifier.solutions storage ref"
                            }
                          },
                          "id": 7787,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7719,
                          "src": "1634:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 7788,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10316,
                            "src": "1663:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1663:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1634:39:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e636f72726563742063616c6c6572",
                        "id": 7791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1674:18:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c82742494c01f90449c85630eab473904de4f8f0be7882f10bee76f41d9998ff",
                          "typeString": "literal_string \"incorrect caller\""
                        },
                        "value": "incorrect caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c82742494c01f90449c85630eab473904de4f8f0be7882f10bee76f41d9998ff",
                          "typeString": "literal_string \"incorrect caller\""
                        }
                      ],
                      "id": 7783,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10319,
                        10320
                      ],
                      "referencedDeclaration": 10320,
                      "src": "1626:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1626:67:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7793,
                  "nodeType": "ExpressionStatement",
                  "src": "1626:67:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1711:20:6",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7795,
                            "name": "uniqueSolution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7727,
                            "src": "1712:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 7797,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7796,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7774,
                            "src": "1727:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1712:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "736f6c7574696f6e2069732075736564206265666f7265",
                        "id": 7799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1732:25:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fdb16f9fd86093f557674c1bfeca046b1cb01e9af98c46e310e78b0b8d255fe4",
                          "typeString": "literal_string \"solution is used before\""
                        },
                        "value": "solution is used before"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fdb16f9fd86093f557674c1bfeca046b1cb01e9af98c46e310e78b0b8d255fe4",
                          "typeString": "literal_string \"solution is used before\""
                        }
                      ],
                      "id": 7794,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10319,
                        10320
                      ],
                      "referencedDeclaration": 10320,
                      "src": "1703:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1703:55:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7801,
                  "nodeType": "ExpressionStatement",
                  "src": "1703:55:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7804,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7762,
                            "src": "1785:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$9975_calldata_ptr",
                              "typeString": "struct SquareVerifier.Proof calldata"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7805,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7766,
                            "src": "1791:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                              "typeString": "uint256[2] calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$9975_calldata_ptr",
                              "typeString": "struct SquareVerifier.Proof calldata"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                              "typeString": "uint256[2] calldata"
                            }
                          ],
                          "id": 7803,
                          "name": "verifyTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10300,
                          "src": "1776:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Proof_$9975_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct SquareVerifier.Proof memory,uint256[2] memory) view returns (bool)"
                          }
                        },
                        "id": 7806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1776:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "736f6c7574696f6e206973206e6f7420636f7272656374",
                        "id": 7807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1798:25:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fac02bae2edae541be6da579b53dfe1e7d3b530ef3931b0989e63b5f3e9c6a5e",
                          "typeString": "literal_string \"solution is not correct\""
                        },
                        "value": "solution is not correct"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fac02bae2edae541be6da579b53dfe1e7d3b530ef3931b0989e63b5f3e9c6a5e",
                          "typeString": "literal_string \"solution is not correct\""
                        }
                      ],
                      "id": 7802,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10319,
                        10320
                      ],
                      "referencedDeclaration": 10320,
                      "src": "1768:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1768:56:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7809,
                  "nodeType": "ExpressionStatement",
                  "src": "1768:56:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7810,
                        "name": "uniqueSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7727,
                        "src": "1834:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 7812,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7811,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7774,
                        "src": "1849:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1834:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1854:4:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1834:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7815,
                  "nodeType": "ExpressionStatement",
                  "src": "1834:24:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7817,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7768,
                        "src": "1873:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7818,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7770,
                        "src": "1876:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7816,
                      "name": "mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1437,
                      "src": "1868:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1868:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7820,
                  "nodeType": "ExpressionStatement",
                  "src": "1868:16:6"
                }
              ]
            },
            "documentation": null,
            "id": 7822,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNewNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7760,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7822,
                  "src": "1420:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1420:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7762,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7822,
                  "src": "1443:20:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$9975_calldata_ptr",
                    "typeString": "struct SquareVerifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7761,
                    "name": "Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9975,
                    "src": "1443:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$9975_storage_ptr",
                      "typeString": "struct SquareVerifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7766,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7822,
                  "src": "1473:25:6",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7763,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1473:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7765,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1481:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1473:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7768,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7822,
                  "src": "1508:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1508:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7770,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7822,
                  "src": "1528:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1528:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1410:139:6"
            },
            "returnParameters": {
              "id": 7772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1559:0:6"
            },
            "scope": 7823,
            "src": "1391:500:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 7824,
        "src": "340:1553:6"
      }
    ],
    "src": "0:1894:6"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7823
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7708,
        "name": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7709,
        "name": "PragmaDirective",
        "src": "33:33:6"
      },
      {
        "attributes": {
          "SourceUnit": 10302,
          "absolutePath": "project:/contracts/SquareVerifier.sol",
          "file": "./SquareVerifier.sol",
          "scope": 7824,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7710,
        "name": "ImportDirective",
        "src": "67:30:6"
      },
      {
        "attributes": {
          "SourceUnit": 1439,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7824,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7711,
        "name": "ImportDirective",
        "src": "98:30:6"
      },
      {
        "attributes": {
          "contractDependencies": [
            398,
            455,
            501,
            990,
            1288,
            1401,
            1438,
            7706,
            10301
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7823,
            10301,
            1438,
            1401,
            7706,
            1288,
            990,
            501,
            455,
            398
          ],
          "name": "SolnSquareVerifier",
          "scope": 7824
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "CustomERC721Token",
                  "referencedDeclaration": 1438,
                  "type": "contract CustomERC721Token"
                },
                "id": 7712,
                "name": "UserDefinedTypeName",
                "src": "371:17:6"
              }
            ],
            "id": 7713,
            "name": "InheritanceSpecifier",
            "src": "371:17:6"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SquareVerifier",
                  "referencedDeclaration": 10301,
                  "type": "contract SquareVerifier"
                },
                "id": 7714,
                "name": "UserDefinedTypeName",
                "src": "390:14:6"
              }
            ],
            "id": 7715,
            "name": "InheritanceSpecifier",
            "src": "390:14:6"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.solutions",
              "name": "solutions",
              "scope": 7823,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "index",
                  "scope": 7720,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7716,
                    "name": "ElementaryTypeName",
                    "src": "512:7:6"
                  }
                ],
                "id": 7717,
                "name": "VariableDeclaration",
                "src": "512:13:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "addr",
                  "scope": 7720,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7718,
                    "name": "ElementaryTypeName",
                    "src": "535:7:6"
                  }
                ],
                "id": 7719,
                "name": "VariableDeclaration",
                "src": "535:12:6"
              }
            ],
            "id": 7720,
            "name": "StructDefinition",
            "src": "485:69:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutionArray",
              "scope": 7823,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct SolnSquareVerifier.solutions[]",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct SolnSquareVerifier.solutions[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "solutions",
                      "referencedDeclaration": 7720,
                      "type": "struct SolnSquareVerifier.solutions"
                    },
                    "id": 7721,
                    "name": "UserDefinedTypeName",
                    "src": "608:9:6"
                  }
                ],
                "id": 7722,
                "name": "ArrayTypeName",
                "src": "608:11:6"
              }
            ],
            "id": 7723,
            "name": "VariableDeclaration",
            "src": "608:33:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "uniqueSolution",
              "scope": 7823,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => bool)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7724,
                    "name": "ElementaryTypeName",
                    "src": "726:7:6"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7725,
                    "name": "ElementaryTypeName",
                    "src": "737:4:6"
                  }
                ],
                "id": 7726,
                "name": "Mapping",
                "src": "718:24:6"
              }
            ],
            "id": 7727,
            "name": "VariableDeclaration",
            "src": "718:40:6"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "solutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "index",
                      "scope": 7733,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7728,
                        "name": "ElementaryTypeName",
                        "src": "846:7:6"
                      }
                    ],
                    "id": 7729,
                    "name": "VariableDeclaration",
                    "src": "846:13:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "owner",
                      "scope": 7733,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7730,
                        "name": "ElementaryTypeName",
                        "src": "861:7:6"
                      }
                    ],
                    "id": 7731,
                    "name": "VariableDeclaration",
                    "src": "861:13:6"
                  }
                ],
                "id": 7732,
                "name": "ParameterList",
                "src": "845:30:6"
              }
            ],
            "id": 7733,
            "name": "EventDefinition",
            "src": "826:50:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7823,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7734,
                "name": "ParameterList",
                "src": "985:2:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7735,
                "name": "ParameterList",
                "src": "997:0:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7737
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "len",
                          "scope": 7757,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7736,
                            "name": "ElementaryTypeName",
                            "src": "1009:7:6"
                          }
                        ],
                        "id": 7737,
                        "name": "VariableDeclaration",
                        "src": "1009:11:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "length",
                          "referencedDeclaration": null,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7723,
                              "type": "struct SolnSquareVerifier.solutions storage ref[] storage ref",
                              "value": "solutionArray"
                            },
                            "id": 7738,
                            "name": "Identifier",
                            "src": "1021:13:6"
                          }
                        ],
                        "id": 7739,
                        "name": "MemberAccess",
                        "src": "1021:20:6"
                      }
                    ],
                    "id": 7740,
                    "name": "VariableDeclarationStatement",
                    "src": "1009:32:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_solutions_$7720_memory",
                                  "typeString": "struct SolnSquareVerifier.solutions memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct SolnSquareVerifier.solutions storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7723,
                                  "type": "struct SolnSquareVerifier.solutions storage ref[] storage ref",
                                  "value": "solutionArray"
                                },
                                "id": 7741,
                                "name": "Identifier",
                                "src": "1053:13:6"
                              }
                            ],
                            "id": 7743,
                            "name": "MemberAccess",
                            "src": "1053:18:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                "index",
                                "addr"
                              ],
                              "type": "struct SolnSquareVerifier.solutions memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7720,
                                  "type": "type(struct SolnSquareVerifier.solutions storage pointer)",
                                  "value": "solutions"
                                },
                                "id": 7744,
                                "name": "Identifier",
                                "src": "1072:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7737,
                                  "type": "uint256",
                                  "value": "len"
                                },
                                "id": 7745,
                                "name": "Identifier",
                                "src": "1089:3:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10316,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 7746,
                                    "name": "Identifier",
                                    "src": "1098:3:6"
                                  }
                                ],
                                "id": 7747,
                                "name": "MemberAccess",
                                "src": "1098:10:6"
                              }
                            ],
                            "id": 7748,
                            "name": "FunctionCall",
                            "src": "1072:38:6"
                          }
                        ],
                        "id": 7749,
                        "name": "FunctionCall",
                        "src": "1053:58:6"
                      }
                    ],
                    "id": 7750,
                    "name": "ExpressionStatement",
                    "src": "1053:58:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7733,
                              "type": "function (uint256,address)",
                              "value": "solutionAdded"
                            },
                            "id": 7751,
                            "name": "Identifier",
                            "src": "1129:13:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7737,
                              "type": "uint256",
                              "value": "len"
                            },
                            "id": 7752,
                            "name": "Identifier",
                            "src": "1143:3:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10316,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 7753,
                                "name": "Identifier",
                                "src": "1147:3:6"
                              }
                            ],
                            "id": 7754,
                            "name": "MemberAccess",
                            "src": "1147:10:6"
                          }
                        ],
                        "id": 7755,
                        "name": "FunctionCall",
                        "src": "1129:29:6"
                      }
                    ],
                    "id": 7756,
                    "name": "EmitStatement",
                    "src": "1123:35:6"
                  }
                ],
                "id": 7757,
                "name": "Block",
                "src": "997:168:6"
              }
            ],
            "id": 7758,
            "name": "FunctionDefinition",
            "src": "965:200:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintNewNFT",
              "scope": 7823,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "index",
                      "scope": 7822,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7759,
                        "name": "ElementaryTypeName",
                        "src": "1420:7:6"
                      }
                    ],
                    "id": 7760,
                    "name": "VariableDeclaration",
                    "src": "1420:13:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proof",
                      "scope": 7822,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "struct SquareVerifier.Proof",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Proof",
                          "referencedDeclaration": 9975,
                          "type": "struct SquareVerifier.Proof"
                        },
                        "id": 7761,
                        "name": "UserDefinedTypeName",
                        "src": "1443:5:6"
                      }
                    ],
                    "id": 7762,
                    "name": "VariableDeclaration",
                    "src": "1443:20:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7822,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7763,
                            "name": "ElementaryTypeName",
                            "src": "1473:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7764,
                            "name": "Literal",
                            "src": "1481:1:6"
                          }
                        ],
                        "id": 7765,
                        "name": "ArrayTypeName",
                        "src": "1473:10:6"
                      }
                    ],
                    "id": 7766,
                    "name": "VariableDeclaration",
                    "src": "1473:25:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 7822,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7767,
                        "name": "ElementaryTypeName",
                        "src": "1508:7:6"
                      }
                    ],
                    "id": 7768,
                    "name": "VariableDeclaration",
                    "src": "1508:10:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7822,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7769,
                        "name": "ElementaryTypeName",
                        "src": "1528:7:6"
                      }
                    ],
                    "id": 7770,
                    "name": "VariableDeclaration",
                    "src": "1528:15:6"
                  }
                ],
                "id": 7771,
                "name": "ParameterList",
                "src": "1410:139:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7772,
                "name": "ParameterList",
                "src": "1559:0:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7774
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "key",
                          "scope": 7821,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7773,
                            "name": "ElementaryTypeName",
                            "src": "1569:7:6"
                          }
                        ],
                        "id": 7774,
                        "name": "VariableDeclaration",
                        "src": "1569:11:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10310,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7775,
                            "name": "Identifier",
                            "src": "1581:9:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Proof_$9975_calldata_ptr",
                                      "typeString": "struct SquareVerifier.Proof calldata"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                                      "typeString": "uint256[2] calldata"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encode",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10303,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7776,
                                    "name": "Identifier",
                                    "src": "1591:3:6"
                                  }
                                ],
                                "id": 7777,
                                "name": "MemberAccess",
                                "src": "1591:10:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7762,
                                  "type": "struct SquareVerifier.Proof calldata",
                                  "value": "proof"
                                },
                                "id": 7778,
                                "name": "Identifier",
                                "src": "1602:5:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7766,
                                  "type": "uint256[2] calldata",
                                  "value": "input"
                                },
                                "id": 7779,
                                "name": "Identifier",
                                "src": "1609:5:6"
                              }
                            ],
                            "id": 7780,
                            "name": "FunctionCall",
                            "src": "1591:24:6"
                          }
                        ],
                        "id": 7781,
                        "name": "FunctionCall",
                        "src": "1581:35:6"
                      }
                    ],
                    "id": 7782,
                    "name": "VariableDeclarationStatement",
                    "src": "1569:47:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c82742494c01f90449c85630eab473904de4f8f0be7882f10bee76f41d9998ff",
                                  "typeString": "literal_string \"incorrect caller\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10319,
                                10320
                              ],
                              "referencedDeclaration": 10320,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7783,
                            "name": "Identifier",
                            "src": "1626:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "addr",
                                  "referencedDeclaration": 7719,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.solutions storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7723,
                                          "type": "struct SolnSquareVerifier.solutions storage ref[] storage ref",
                                          "value": "solutionArray"
                                        },
                                        "id": 7784,
                                        "name": "Identifier",
                                        "src": "1634:13:6"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7760,
                                          "type": "uint256",
                                          "value": "index"
                                        },
                                        "id": 7785,
                                        "name": "Identifier",
                                        "src": "1648:5:6"
                                      }
                                    ],
                                    "id": 7786,
                                    "name": "IndexAccess",
                                    "src": "1634:20:6"
                                  }
                                ],
                                "id": 7787,
                                "name": "MemberAccess",
                                "src": "1634:25:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10316,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 7788,
                                    "name": "Identifier",
                                    "src": "1663:3:6"
                                  }
                                ],
                                "id": 7789,
                                "name": "MemberAccess",
                                "src": "1663:10:6"
                              }
                            ],
                            "id": 7790,
                            "name": "BinaryOperation",
                            "src": "1634:39:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "696e636f72726563742063616c6c6572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"incorrect caller\"",
                              "value": "incorrect caller"
                            },
                            "id": 7791,
                            "name": "Literal",
                            "src": "1674:18:6"
                          }
                        ],
                        "id": 7792,
                        "name": "FunctionCall",
                        "src": "1626:67:6"
                      }
                    ],
                    "id": 7793,
                    "name": "ExpressionStatement",
                    "src": "1626:67:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_fdb16f9fd86093f557674c1bfeca046b1cb01e9af98c46e310e78b0b8d255fe4",
                                  "typeString": "literal_string \"solution is used before\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10319,
                                10320
                              ],
                              "referencedDeclaration": 10320,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7794,
                            "name": "Identifier",
                            "src": "1703:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7727,
                                      "type": "mapping(bytes32 => bool)",
                                      "value": "uniqueSolution"
                                    },
                                    "id": 7795,
                                    "name": "Identifier",
                                    "src": "1712:14:6"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7774,
                                      "type": "bytes32",
                                      "value": "key"
                                    },
                                    "id": 7796,
                                    "name": "Identifier",
                                    "src": "1727:3:6"
                                  }
                                ],
                                "id": 7797,
                                "name": "IndexAccess",
                                "src": "1712:19:6"
                              }
                            ],
                            "id": 7798,
                            "name": "UnaryOperation",
                            "src": "1711:20:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "736f6c7574696f6e2069732075736564206265666f7265",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"solution is used before\"",
                              "value": "solution is used before"
                            },
                            "id": 7799,
                            "name": "Literal",
                            "src": "1732:25:6"
                          }
                        ],
                        "id": 7800,
                        "name": "FunctionCall",
                        "src": "1703:55:6"
                      }
                    ],
                    "id": 7801,
                    "name": "ExpressionStatement",
                    "src": "1703:55:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_fac02bae2edae541be6da579b53dfe1e7d3b530ef3931b0989e63b5f3e9c6a5e",
                                  "typeString": "literal_string \"solution is not correct\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10319,
                                10320
                              ],
                              "referencedDeclaration": 10320,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7802,
                            "name": "Identifier",
                            "src": "1768:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Proof_$9975_calldata_ptr",
                                      "typeString": "struct SquareVerifier.Proof calldata"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_calldata_ptr",
                                      "typeString": "uint256[2] calldata"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10300,
                                  "type": "function (struct SquareVerifier.Proof memory,uint256[2] memory) view returns (bool)",
                                  "value": "verifyTx"
                                },
                                "id": 7803,
                                "name": "Identifier",
                                "src": "1776:8:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7762,
                                  "type": "struct SquareVerifier.Proof calldata",
                                  "value": "proof"
                                },
                                "id": 7804,
                                "name": "Identifier",
                                "src": "1785:5:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7766,
                                  "type": "uint256[2] calldata",
                                  "value": "input"
                                },
                                "id": 7805,
                                "name": "Identifier",
                                "src": "1791:5:6"
                              }
                            ],
                            "id": 7806,
                            "name": "FunctionCall",
                            "src": "1776:21:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "736f6c7574696f6e206973206e6f7420636f7272656374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"solution is not correct\"",
                              "value": "solution is not correct"
                            },
                            "id": 7807,
                            "name": "Literal",
                            "src": "1798:25:6"
                          }
                        ],
                        "id": 7808,
                        "name": "FunctionCall",
                        "src": "1768:56:6"
                      }
                    ],
                    "id": 7809,
                    "name": "ExpressionStatement",
                    "src": "1768:56:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7727,
                                  "type": "mapping(bytes32 => bool)",
                                  "value": "uniqueSolution"
                                },
                                "id": 7810,
                                "name": "Identifier",
                                "src": "1834:14:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7774,
                                  "type": "bytes32",
                                  "value": "key"
                                },
                                "id": 7811,
                                "name": "Identifier",
                                "src": "1849:3:6"
                              }
                            ],
                            "id": 7812,
                            "name": "IndexAccess",
                            "src": "1834:19:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 7813,
                            "name": "Literal",
                            "src": "1854:4:6"
                          }
                        ],
                        "id": 7814,
                        "name": "Assignment",
                        "src": "1834:24:6"
                      }
                    ],
                    "id": 7815,
                    "name": "ExpressionStatement",
                    "src": "1834:24:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1437,
                              "type": "function (address,uint256) returns (bool)",
                              "value": "mint"
                            },
                            "id": 7816,
                            "name": "Identifier",
                            "src": "1868:4:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7768,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 7817,
                            "name": "Identifier",
                            "src": "1873:2:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7770,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7818,
                            "name": "Identifier",
                            "src": "1876:7:6"
                          }
                        ],
                        "id": 7819,
                        "name": "FunctionCall",
                        "src": "1868:16:6"
                      }
                    ],
                    "id": 7820,
                    "name": "ExpressionStatement",
                    "src": "1868:16:6"
                  }
                ],
                "id": 7821,
                "name": "Block",
                "src": "1559:332:6"
              }
            ],
            "id": 7822,
            "name": "FunctionDefinition",
            "src": "1391:500:6"
          }
        ],
        "id": 7823,
        "name": "ContractDefinition",
        "src": "340:1553:6"
      }
    ],
    "id": 7824,
    "name": "SourceUnit",
    "src": "0:1894:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x32f9b4ad842654dbc1aefcf3959047b3100382a41e757e901bf5f504d503a709": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "newOnwer",
              "type": "address"
            }
          ],
          "name": "OwnerTransfered",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        },
        "0x529aebee0fa53cdfb493ac455bd2a7b5924a502f5e34b85b84ebda0e84e62cb2": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "solutionAdded",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xD659a44625d539a90ABb0469BA66ECf0e1874cbD",
      "transactionHash": "0xff9f3e91197480ea37f9e5060a6706f2583feaf45b4a3fc3b34021ebf7b8ae4a"
    },
    "1630832078453": {
      "events": {},
      "links": {},
      "address": "0xaBE5c4265fa6D12AB8EC83CDDB7b808cd8De95C6",
      "transactionHash": "0x381193b2444cb13f2ec8791c25af87fdfc890605f1d4193abf048818bb6504e8"
    },
    "1631168961860": {
      "events": {},
      "links": {},
      "address": "0xf25186B5081Ff5cE73482AD761DB0eB0d25abfBF",
      "transactionHash": "0x78527151e952f41bce686c86426d5094cf7d4abe05d579055f2556c942c0221e"
    },
    "1631178172150": {
      "events": {},
      "links": {},
      "address": "0xf25186B5081Ff5cE73482AD761DB0eB0d25abfBF",
      "transactionHash": "0x57775d7678e978ff41f8f7310fc866a587dad346dc0cba060af13c107d186c1d"
    },
    "1631179971188": {
      "events": {},
      "links": {},
      "address": "0xf25186B5081Ff5cE73482AD761DB0eB0d25abfBF",
      "transactionHash": "0x26a6c37610bb6a40fda9ae6691de5ae7eb6e967ad596853d286311e98a5ed21d"
    },
    "1631180047227": {
      "events": {},
      "links": {},
      "address": "0xf25186B5081Ff5cE73482AD761DB0eB0d25abfBF",
      "transactionHash": "0xedbc7a6cb5eb14481178f388c86819930263c9d628d63d39e955bb10b4745c52"
    },
    "1631180089934": {
      "events": {},
      "links": {},
      "address": "0xf25186B5081Ff5cE73482AD761DB0eB0d25abfBF",
      "transactionHash": "0xedbc7a6cb5eb14481178f388c86819930263c9d628d63d39e955bb10b4745c52"
    },
    "1631180159246": {
      "events": {},
      "links": {},
      "address": "0xf25186B5081Ff5cE73482AD761DB0eB0d25abfBF",
      "transactionHash": "0x57775d7678e978ff41f8f7310fc866a587dad346dc0cba060af13c107d186c1d"
    },
    "1631180249772": {
      "events": {},
      "links": {},
      "address": "0xf25186B5081Ff5cE73482AD761DB0eB0d25abfBF",
      "transactionHash": "0x78527151e952f41bce686c86426d5094cf7d4abe05d579055f2556c942c0221e"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-09-09T12:53:27.255Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}